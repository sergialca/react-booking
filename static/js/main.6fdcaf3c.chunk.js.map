{"version":3,"sources":["components/submitButton/submitButton.js","components/input/input.js","components/formError/formError.js","context/user.js","components/loginForm/loginForm.js","components/transparentNav/transparentNav.js","context/lang.js","components/langDropdown/langDropdown.js","pages/login/login.js","components/registerForm/registerForm.js","components/alert/alert.js","pages/register/register.js","context/menu.js","components/navbar/navbar.js","layouts/main/main.js","context/logic.js","components/time/time.js","components/room/room.js","components/alert/timeAlert.js","api/api.js","pages/dashboard/dashboard.js","pages/myspace/myspace.js","components/appRoute/appRoute.js","App.js","serviceWorker.js","index.js"],"names":["SubmitButton","txt","loading","type","className","color","size","Input","children","account","accountChange","placeholder","name","value","onChange","formError","UserContext","createContext","LoginForm","content","history","useState","mail","psw","setAccount","submit","error","setError","setLoading","setUser","useContext","e","target","loginTitle","onSubmit","preventDefault","test","mailError","mailRequired","pswRule","pswRequired","Parse","User","logIn","then","user","console","log","JSON","stringify","logged","email","token","sessionToken","id","objectId","catch","code","submitErrorVerify","submitError","finally","pswPlaceholder","submitBtn","recoveryTxt","href","recoveryA","TransparentNav","LangContext","LangDropdown","lang","setLang","show","setShow","selectLang","la","changeShow","onClick","Login","setContent","useEffect","loginCa","loginEs","route","push","to","signup","RegisterForm","showAlert","rePsw","signupTitle","nameRequired","rePswError","rePswRequired","set","signUp","submitOk","https","require","params","req","request","hostname","path","method","headers","res","setEncoding","on","chunk","message","write","end","mailVerification","namePlaceholder","rePswPlaceholder","Alert","aceptar","txtBtn","display","Register","setDisplay","registerCa","registerEs","changeDisplay","back","accept","MenuContext","Navbar","expanded","setExpanded","setMenu","first","second","selected","setSelected","selectTab","tab","brand","booking","myBooking","Layout","menu","navbarCa","navbarEs","LogicContext","Time","time","timeId","room","roomId","logic","setLogic","booked","setBooked","day","moment","dayFormatted","format","timeAlert","Room","noTimes","map","t","timeInt","key","TimeAlert","cancelar","prev","url","appId","normalHeaders","saveError","description","a","axios","data","response","newBooking","userId","__type","val","getBooking","Booking","Object","extend","queryRoom","Query","equalTo","select","queryDay","composedQuery","and","find","result","getRooms","rooms","query","roomsRes","Dashboard","props","focus","datePicker","setDayPicker","selectable","setSelectable","attributes","times","setRooms","dashboardCa","dashboardEs","selectableRooms","dbRooms","resRooms","i","bo","length","tt","et","pos","splice","results","label","dis","colourStyles","control","styles","backgroundColor","borderRadius","width","date","onDateChange","focused","onFocusChange","numberOfMonths","displayFormat","options","defaultValue","all","m","_objCount","complete","Myspace","myspaceCa","myspaceEs","title","AppRoute","Component","component","layout","render","rest","App","session","parse","localStorage","getItem","getUserLoged","serverURL","initialize","Provider","from","Boolean","window","location","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fdcaf3c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"./submitButton.scss\";\r\nconst SubmitButton = ({ txt, loading }) => {\r\n    return (\r\n        <button type=\"submit\" className=\"submitBtn\">\r\n            {txt}\r\n            <span className=\"spin\">\r\n                <ClipLoader loading={loading} color={\"#fff\"} size={12} />\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\nimport \"./input.scss\";\r\n\r\nconst Input = ({ children, account, accountChange, placeholder, type, name }) => {\r\n    return (\r\n        <div className=\"inputWrapper center space\">\r\n            {children}\r\n            <input\r\n                className=\"input\"\r\n                name={name}\r\n                type={type}\r\n                value={account}\r\n                onChange={accountChange}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./formError.scss\";\r\n\r\nconst formError = ({ txt }) => {\r\n    return <div className=\"loginError\">{txt}</div>;\r\n};\r\n\r\nexport default formError;\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(\"h\");\r\n","import React, { useState, useContext } from \"react\";\r\nimport { MdMail } from \"react-icons/md\";\r\nimport { BsLockFill } from \"react-icons/bs\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport Input from \"../input/input\";\r\nimport FormError from \"../formError/formError\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport Parse from \"parse\";\r\nimport \"./loginForm.scss\";\r\n\r\nconst LoginForm = ({ content, history }) => {\r\n    const [account, setAccount] = useState({ mail: \"\", psw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\", submit: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n    const { setUser } = useContext(UserContext);\r\n\r\n    const accountChange = (e) => {\r\n        setError((error) => ({ ...error, mail: \"\", psw: \"\" }));\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const validMail = () => {\r\n        if (\r\n            account.mail &&\r\n            !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                account.mail\r\n            )\r\n        ) {\r\n            setError((error) => ({ ...error, mail: content.mailError }));\r\n            return false;\r\n        } else if (!account.mail) {\r\n            setError((error) => ({ ...error, mail: content.mailRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, mail: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validPsw = () => {\r\n        if (account.psw && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(account.psw)) {\r\n            setError((error) => ({ ...error, psw: content.pswRule }));\r\n            return false;\r\n        } else if (!account.psw) {\r\n            setError((error) => ({ ...error, psw: content.pswRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, psw: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError((error) => ({ ...error, submit: \"\" }));\r\n        const mail = validMail();\r\n        const psw = validPsw();\r\n        if (mail && psw) {\r\n            Parse.User.logIn(account.mail, account.psw)\r\n                .then((user) => {\r\n                    console.log(\"User LOGEDIN\", JSON.stringify(user));\r\n                    setUser({\r\n                        logged: true,\r\n                        name: user.name,\r\n                        email: user.mail,\r\n                        token: user.sessionToken,\r\n                        id: user.objectId,\r\n                    });\r\n                    history(\"dashboard\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"logIn -> error\", error);\r\n                    error.code === 205\r\n                        ? setError((error) => ({ ...error, submit: content.submitErrorVerify }))\r\n                        : setError((error) => ({ ...error, submit: content.submitError }));\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        } else setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <p className=\"loginTxt\">{content.loginTitle}</p>\r\n            <form className=\"loginForm\" onSubmit={logIn}>\r\n                <Input\r\n                    name=\"mail\"\r\n                    account={account.mail}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Mail\"\r\n                    type=\"mail\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <MdMail />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.mail} />\r\n                <Input\r\n                    name=\"psw\"\r\n                    account={account.psw}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.pswPlaceholder}\r\n                    type=\"password\"\r\n                >\r\n                    <span>\r\n                        <BsLockFill />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.psw} />\r\n                <div className=\"loginBtnWrapper space\">\r\n                    <SubmitButton loading={loading} txt={content.submitBtn} />\r\n                </div>\r\n                <FormError txt={error.submit} />\r\n                <div className=\"space recover\">\r\n                    <span>\r\n                        {content.recoveryTxt}{\" \"}\r\n                        <a href=\"mailto:support@gmail.com\">{content.recoveryA}</a>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./transparentNav.scss\";\r\n\r\nconst TransparentNav = ({ children }) => {\r\n    return <div className=\"transparentNav\">{children}</div>;\r\n};\r\n\r\nexport default TransparentNav;\r\n","import { createContext } from \"react\";\r\n\r\nexport const LangContext = createContext(\"\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport \"./langDropdown.scss\";\r\n\r\nconst LangDropdown = () => {\r\n    const { lang, setLang } = useContext(LangContext);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const selectLang = (la) => {\r\n        if (la === \"ca\") {\r\n            setLang(\"ca\");\r\n        } else if (la === \"es\") {\r\n            setLang(\"es\");\r\n        }\r\n        setShow((show) => !show);\r\n    };\r\n\r\n    const changeShow = () => {\r\n        setShow((show) => !show);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div onClick={changeShow} className=\"dropbtn\">\r\n                {lang === \"es\" ? \"ESP\" : lang === \"ca\" ? \"CAT\" : \"ENG\"}\r\n            </div>\r\n            <div onClick={changeShow} className=\"arrow\"></div>\r\n            <div className={show ? \"dropdown-content\" : \"noDropdown\"}>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"es\")}>\r\n                    ESP\r\n                </div>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"ca\")}>\r\n                    CAT\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LangDropdown;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginForm from \"../../components/loginForm/loginForm\";\r\nimport TransparentNav from \"../../components/transparentNav/transparentNav\";\r\nimport LangDropdown from \"../../components/langDropdown/langDropdown\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport loginEs from \"../../json/loginEs.json\";\r\nimport loginCa from \"../../json/loginCa.json\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = ({ history }) => {\r\n    const { lang } = useContext(LangContext);\r\n    const [content, setContent] = useState(\"login\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => loginCa);\r\n        else if (lang === \"es\") setContent(() => loginEs);\r\n    }, [lang]);\r\n\r\n    const changeRoute = (route) => {\r\n        history.push(`/${route}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TransparentNav>\r\n                <LangDropdown />\r\n            </TransparentNav>\r\n            <div className=\"login\">\r\n                <div className=\"formContainer fade\">\r\n                    <LoginForm history={changeRoute} content={content} />\r\n                    <div className=\"linkWrap\">\r\n                        <Link to={`/signup`}>{content.signup}</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { MdMail, MdInfo } from \"react-icons/md\";\r\nimport { BsLockFill, BsPersonFill } from \"react-icons/bs\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport Input from \"../input/input\";\r\nimport FormError from \"../formError/formError\";\r\nimport Parse from \"parse\";\r\nimport \"./registerForm.scss\";\r\n\r\nconst RegisterForm = ({ showAlert, content }) => {\r\n    const [account, setAccount] = useState({ mail: \"\", psw: \"\", name: \"\", rePsw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\", rePsw: \"\", name: \"\", submit: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const accountChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const validMail = () => {\r\n        if (\r\n            account.mail &&\r\n            !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                account.mail\r\n            )\r\n        ) {\r\n            setError((error) => ({ ...error, mail: content.mailError }));\r\n            return false;\r\n        } else if (!account.mail) {\r\n            setError((error) => ({ ...error, mail: content.mailRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, mail: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validPsw = () => {\r\n        if (account.psw && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(account.psw)) {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: content.pswRule,\r\n            }));\r\n            return false;\r\n        } else if (!account.psw) {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: content.pswRequired,\r\n            }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: \"\",\r\n            }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validRePsw = () => {\r\n        if (account.psw !== account.rePsw) {\r\n            setError((error) => ({ ...error, rePsw: content.rePswError }));\r\n            return false;\r\n        } else if (!account.rePsw) {\r\n            setError((error) => ({ ...error, rePsw: content.rePswRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, rePsw: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validName = () => {\r\n        if (!account.name) {\r\n            setError((error) => ({ ...error, name: content.nameRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, name: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const mailVerification = () => {\r\n        const https = require(\"https\");\r\n        const params = { email: account.mail };\r\n        const options = {\r\n            hostname: \"https://parseapi.back4app.com\",\r\n            path: \"/verificationEmailRequest\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"X-Parse-Application-Id\": \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\",\r\n                \"X-Parse-REST-API-Key\": \"od4o0RAtgQzAICZY1LdEiVrItZN2trnrtcQX4hve\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const req = https.request(options, (res) => {\r\n            res.setEncoding(\"utf8\");\r\n            res.on(\"data\", (chunk) => {\r\n                console.log(`BODY: ${chunk}`);\r\n            });\r\n            res.on(\"end\", () => {\r\n                console.log(\"No more data in response.\");\r\n            });\r\n        });\r\n\r\n        req.on(\"error\", (e) => {\r\n            console.error(`Problem with request: ${e.message}`);\r\n        });\r\n        req.write(params);\r\n        req.end();\r\n    };\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError((error) => ({ ...error, submit: \"\" }));\r\n        const mail = validMail();\r\n        const name = validName();\r\n        const psw = validPsw();\r\n        const rePsw = validRePsw();\r\n        if (mail && psw && rePsw && name) {\r\n            const user = new Parse.User();\r\n            user.set(\"username\", account.name);\r\n            user.set(\"email\", account.mail);\r\n            user.set(\"password\", account.psw);\r\n            user.set(\"name\", account.name);\r\n            user.signUp()\r\n                .then((user) => {\r\n                    console.log(\"User signed up\", user);\r\n                    setError((error) => ({ ...error, submit: content.submitOk }));\r\n                    mailVerification();\r\n                })\r\n                .catch((error) => {\r\n                    setError((error) => ({ ...error, submit: content.submitError }));\r\n                })\r\n                .finally(() => setLoading(false));\r\n        } else setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <p className=\"signinTxt\">{content.signupTitle}</p>\r\n            <form className=\"signinForm\" onSubmit={signIn}>\r\n                <Input\r\n                    name=\"name\"\r\n                    account={account.name}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.namePlaceholder}\r\n                    type=\"\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <BsPersonFill />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.name} />\r\n                <Input\r\n                    name=\"mail\"\r\n                    account={account.mail}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Mail\"\r\n                    type=\"mail\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <MdMail />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.mail} />\r\n                <div className=\"inputInfoContainer space\">\r\n                    <div className=\"inputInfoWrapper\">\r\n                        <span>\r\n                            <BsLockFill />\r\n                        </span>\r\n                        <input\r\n                            className=\"inputInfo\"\r\n                            name=\"psw\"\r\n                            type=\"password\"\r\n                            value={account.psw}\r\n                            onChange={accountChange}\r\n                            placeholder={content.pswPlaceholder}\r\n                        />\r\n                    </div>\r\n                    <MdInfo onClick={() => showAlert()} className=\"info\" />\r\n                </div>\r\n                <FormError txt={error.psw} />\r\n                <Input\r\n                    name=\"rePsw\"\r\n                    account={account.rePsw}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.rePswPlaceholder}\r\n                    type=\"password\"\r\n                >\r\n                    <span>\r\n                        <BsLockFill />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.rePsw} />\r\n                <div className=\"signinBtnWrapper\">\r\n                    <SubmitButton loading={loading} txt={content.submitBtn} />\r\n                </div>\r\n                <FormError txt={error.submit} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport \"./alert.scss\";\r\nconst Alert = ({ txt, aceptar, txtBtn, display }) => {\r\n    return (\r\n        <div className={display ? \"alert\" : \"noAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <div className=\"txtWrap\">\r\n                        <span className=\"txt\">{txt}</span>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <button className=\"btn\" onClick={() => aceptar()}>\r\n                            {txtBtn}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegisterForm from \"../../components/registerForm/registerForm\";\r\nimport Alert from \"../../components/alert/alert\";\r\nimport TransparentNav from \"../../components/transparentNav/transparentNav\";\r\nimport LangDropdown from \"../../components/langDropdown/langDropdown\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport registerCa from \"../../json/registerCa.json\";\r\nimport registerEs from \"../../json/registerEs.json\";\r\nimport \"./register.scss\";\r\n\r\nconst Register = ({ history }) => {\r\n    const { lang } = useContext(LangContext);\r\n    const [display, setDisplay] = useState(false);\r\n    const [content, setContent] = useState(\"singup\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => registerCa);\r\n        else if (lang === \"es\") setContent(() => registerEs);\r\n    }, [lang]);\r\n\r\n    const changeDisplay = () => {\r\n        setDisplay(!display);\r\n    };\r\n\r\n    const changeRoute = (route) => {\r\n        history.push(`/${route}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TransparentNav>\r\n                <LangDropdown />\r\n            </TransparentNav>\r\n            <div className=\"register\">\r\n                <div className=\"formContainer fade\">\r\n                    <RegisterForm\r\n                        history={changeRoute}\r\n                        content={content}\r\n                        showAlert={changeDisplay}\r\n                    />\r\n                    <div className=\"linkWrap\">\r\n                        <Link to={`/login`}>{content.back}</Link>\r\n                    </div>\r\n                </div>\r\n                <Alert\r\n                    txt={content.pswRule}\r\n                    txtBtn={content.accept}\r\n                    display={display}\r\n                    aceptar={changeDisplay}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import { createContext } from \"react\";\r\n\r\nexport const MenuContext = createContext(\"m\");\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiThMenu } from \"react-icons/ti\";\r\nimport LangDropdown from \"../langDropdown/langDropdown\";\r\nimport { MenuContext } from \"../../context/menu\";\r\nimport \"./navbar.scss\";\r\n\r\nconst Navbar = ({ content }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const { setMenu } = useContext(MenuContext);\r\n    const [selected, setSelected] = useState({ first: true, second: false });\r\n\r\n    const onExpand = () => {\r\n        setExpanded((expanded) => !expanded);\r\n    };\r\n\r\n    const selectTab = (tab) => {\r\n        switch (tab) {\r\n            case \"1\":\r\n                setSelected(() => ({ first: true, second: false }));\r\n                //FALTA PULIR\r\n                setMenu(() => \"Reservar\");\r\n                //\r\n                break;\r\n            case \"2\":\r\n                setSelected(() => ({ first: false, second: true }));\r\n                setMenu(() => \"Mis Reservas\");\r\n                break;\r\n            default:\r\n                setSelected(() => ({ first: true, second: false }));\r\n                break;\r\n        }\r\n        setExpanded(() => false);\r\n    };\r\n\r\n    return (\r\n        <div className={expanded ? \"navbar responsive\" : \"navbar\"}>\r\n            <Link onClick={() => selectTab(\"1\")} className=\"link brand\" to=\"/dashboard\">\r\n                {content.brand}\r\n            </Link>\r\n            <div className={expanded ? \"panel responsive\" : \"panel\"}>\r\n                <Link\r\n                    onClick={() => selectTab(\"1\")}\r\n                    className={selected.first ? \"link selected\" : \"link\"}\r\n                    to=\"/dashboard\"\r\n                >\r\n                    {content.booking}\r\n                </Link>\r\n                <Link\r\n                    onClick={() => selectTab(\"2\")}\r\n                    className={selected.second ? \"link selected\" : \"link\"}\r\n                    to=\"/myspace\"\r\n                >\r\n                    {content.myBooking}\r\n                </Link>\r\n                <div className=\"langu\">\r\n                    <LangDropdown />\r\n                </div>\r\n            </div>\r\n            <div className=\"icon\" onClick={onExpand}>\r\n                <TiThMenu />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport { MenuContext } from \"../../context/menu\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport navbarCa from \"../../json/navbarCa.json\";\r\nimport navbarEs from \"../../json/navbarEs.json\";\r\nimport \"./main.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n    const { menu } = useContext(MenuContext);\r\n    const { lang } = useContext(LangContext);\r\n    const [content, setContent] = useState(\"login\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => navbarCa);\r\n        else if (lang === \"es\") setContent(() => navbarEs);\r\n    }, [lang]);\r\n\r\n    return (\r\n        <div className=\"layout\">\r\n            <Navbar content={content} />\r\n            <div className=\"header\">{menu}</div>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { createContext } from \"react\";\r\n\r\nexport const LogicContext = createContext(\"l\");\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { LogicContext } from \"../../context/logic\";\r\nimport moment from \"moment\";\r\nimport \"./time.scss\";\r\n\r\nconst Time = ({ time, timeId, room, roomId, setDisplay }) => {\r\n    const { logic, setLogic } = useContext(LogicContext);\r\n    const [booked, setBooked] = useState(false);\r\n\r\n    const onTimeClick = () => {\r\n        setLogic(() => ({\r\n            room,\r\n            roomId,\r\n            day: moment(),\r\n            dayFormatted: moment().format(\"L\"),\r\n            time,\r\n            timeId: { id: timeId, booked: false },\r\n        }));\r\n        setDisplay(() => ({ timeAlert: true }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (logic.timeId.id === timeId && logic.timeId.booked) {\r\n            setBooked(() => true);\r\n        }\r\n    }, [logic.timeId.booked]);\r\n\r\n    return (\r\n        <div className={booked ? \"noTime\" : \"timebadge\"} onClick={() => onTimeClick()}>\r\n            <span>{time}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport Time from \"../time/time\";\r\nimport \"./room.scss\";\r\n\r\nconst Room = ({ name, time, roomId, day, setDisplay, noTimes }) => {\r\n    return (\r\n        <div className=\"room\">\r\n            <div className=\"title\">{name}</div>\r\n            <div className=\"time\">\r\n                {time.map((t) => {\r\n                    return typeof t === \"string\" ? (\r\n                        noTimes\r\n                    ) : (\r\n                        <Time\r\n                            time={t.timeInt}\r\n                            key={t.id}\r\n                            timeId={t.id}\r\n                            room={name}\r\n                            roomId={roomId}\r\n                            setDisplay={setDisplay}\r\n                            day={day}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","import React, { useContext } from \"react\";\r\nimport \"./timeAlert.scss\";\r\nimport { LogicContext } from \"../../context/logic\";\r\n\r\nconst TimeAlert = ({ aceptar, display, cancelar }) => {\r\n    const { logic, setLogic } = useContext(LogicContext);\r\n\r\n    const timeAccepted = () => {\r\n        setLogic((prev) => ({\r\n            ...prev,\r\n            timeId: { id: prev.timeId.id, booked: true },\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className={display ? \"timeAlert\" : \"noAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <div className=\"txtWrap\">\r\n                        <span className=\"txt\">{`Estàs seguro que quieres reservar la ${logic.room} el dia ${logic.day} de ${logic.time}`}</span>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <button\r\n                            className=\"btn aceptar\"\r\n                            onClick={() => {\r\n                                aceptar();\r\n                                timeAccepted();\r\n                            }}\r\n                        >\r\n                            Aceptar\r\n                        </button>\r\n                        <button className=\"btn\" onClick={() => cancelar()}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeAlert;\r\n","import axios from \"axios\";\r\nimport Parse from \"parse\";\r\n\r\nconst url = \"https://parseapi.back4app.com\";\r\nconst appId = \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\";\r\nconst normalHeaders = {\r\n    \"X-Parse-Application-Id\": appId,\r\n    \"X-Parse-REST-API-Key\": \"od4o0RAtgQzAICZY1LdEiVrItZN2trnrtcQX4hve\",\r\n    \"Content-Type\": \"application/json\",\r\n};\r\nconst saveError = async (e, description) => {\r\n    await axios({\r\n        method: \"post\",\r\n        url: `${url}/classes/Errors`,\r\n        headers: normalHeaders,\r\n        data: {\r\n            code: e.response.data.code,\r\n            error: e.response.data.error,\r\n            description,\r\n        },\r\n    });\r\n    return;\r\n};\r\n\r\nexport const getValUserLoged = async (token) => {\r\n    try {\r\n        const val = await axios({\r\n            method: \"get\",\r\n            url: `${url}/users/me`,\r\n            headers: {\r\n                \"X-Parse-Application-Id\": appId,\r\n                \"X-Parse-REST-API-Key\": \"od4o0RAtgQzAICZY1LdEiVrItZN2trnrtcQX4hve\",\r\n                \"X-Parse-Session-Token\": token,\r\n            },\r\n        });\r\n        return val;\r\n    } catch (e) {\r\n        saveError(e, \"El token no se ha encontrado al verificar usuario\");\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const isUserLoged = async () => {\r\n    const session = JSON.parse(localStorage.getItem(`Parse/${appId}/currentUser`));\r\n    const localUser = session ? await getValUserLoged(session.sessionToken) : \"\";\r\n    return localUser ? true : false;\r\n};\r\n\r\nexport const newBooking = async (userId, roomId, day, time) => {\r\n    try {\r\n        const val = await axios({\r\n            method: \"post\",\r\n            url: `${url}/classes/Booking`,\r\n            headers: normalHeaders,\r\n            data: {\r\n                user: { __type: \"Pointer\", className: \"_User\", objectId: userId },\r\n                day,\r\n                time,\r\n                room: { __type: \"Pointer\", className: \"Rooms\", objectId: roomId },\r\n            },\r\n        });\r\n        return val.data;\r\n    } catch (e) {\r\n        saveError(e, \"Fallo al crear reserva\");\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const getBooking = async (day, roomId) => {\r\n    const Booking = Parse.Object.extend(\"Booking\");\r\n    const queryRoom = new Parse.Query(Booking);\r\n    queryRoom.equalTo(\"room\", { __type: \"Pointer\", className: \"Rooms\", objectId: roomId });\r\n    queryRoom.select(\"time\");\r\n    const queryDay = new Parse.Query(Booking);\r\n    queryDay.equalTo(\"day\", day);\r\n    queryDay.select(\"time\");\r\n    const composedQuery = Parse.Query.and(queryRoom, queryDay);\r\n    let result = await composedQuery.find();\r\n    return result;\r\n};\r\n\r\nexport const getRooms = async () => {\r\n    const rooms = Parse.Object.extend(\"Rooms\");\r\n    const query = new Parse.Query(rooms);\r\n    let roomsRes = await query.find();\r\n    return roomsRes;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport dashboardCa from \"../../json/dashboardCa.json\";\r\nimport dashboardEs from \"../../json/dashboardEs.json\";\r\nimport Room from \"../../components/room/room\";\r\nimport Select from \"react-select\";\r\nimport TimeAlert from \"../../components/alert/timeAlert\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { LogicContext } from \"../../context/logic\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport { newBooking, getValUserLoged, getRooms, getBooking } from \"../../api/api\";\r\nimport \"./dashboard.scss\";\r\n\r\nconst Dashboard = (props) => {\r\n    const { lang } = useContext(LangContext);\r\n    const { logic, setLogic } = useContext(LogicContext);\r\n    const { user } = useContext(UserContext);\r\n    const [display, setDisplay] = useState({ timeAlert: false });\r\n    const [datePicker, setDayPicker] = useState({ focus: false });\r\n    const [selectable, setSelectable] = useState([]);\r\n    const [rooms, setRooms] = useState([\r\n        {\r\n            attributes: {\r\n                name: \"fake\",\r\n                times: [\r\n                    { id: 0, timeInt: \"a-b\" },\r\n                    { id: 0, timeInt: \"a-b\" },\r\n                ],\r\n            },\r\n        },\r\n    ]);\r\n\r\n    const selectLang = () => {\r\n        if (lang === \"ca\") {\r\n            return dashboardCa;\r\n        } else if (lang === \"es\") {\r\n            return dashboardEs;\r\n        }\r\n    };\r\n\r\n    const [content, setContent] = useState(selectLang());\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") {\r\n            setContent(() => dashboardCa);\r\n        } else if (lang === \"es\") {\r\n            setContent(() => dashboardEs);\r\n        }\r\n        selectableRooms();\r\n    }, [lang]);\r\n\r\n    const verifyUser = async () => {\r\n        const currentUser = await getValUserLoged(user.token);\r\n        console.log(\"verifyUser -> currentUser\", currentUser);\r\n        return currentUser ? \"\" : props.history.push(\"/login\");\r\n    };\r\n\r\n    const dbRooms = async () => {\r\n        const resRooms = await getRooms();\r\n        for (let i = 0; i < resRooms.length; i++) {\r\n            const bo = await getBooking(logic.dayFormatted, resRooms[i].id);\r\n            if (bo.length > 0) {\r\n                const reNew = bo.map((t) => {\r\n                    return t.attributes.time;\r\n                });\r\n                reNew.map((tt) => {\r\n                    resRooms[i].attributes.times.map((et, pos) => {\r\n                        if (tt === et.timeInt) resRooms[i].attributes.times.splice(pos, 1);\r\n                        return tt;\r\n                    });\r\n                    return tt;\r\n                });\r\n            }\r\n            if (resRooms[i].attributes.times.length === 0) {\r\n                resRooms[i].attributes.times.push(\"No time available\");\r\n            }\r\n            if (i === 0) setRooms(() => [resRooms[i]]);\r\n            else setRooms((prev) => [...prev, resRooms[i]]);\r\n        }\r\n        return;\r\n    };\r\n\r\n    const selectableRooms = async () => {\r\n        const results = await getRooms();\r\n        for (let i = 0; i < results.length; i++) {\r\n            if (i === 0) {\r\n                setSelectable(() => [\r\n                    { value: results[i].attributes.name, label: results[i].attributes.name },\r\n                ]);\r\n            } else if (i === results.length - 1) {\r\n                setSelectable((prev) => [\r\n                    ...prev,\r\n                    { value: results[i].attributes.name, label: results[i].attributes.name },\r\n                    {\r\n                        value: lang === \"ca\" ? \"Totes\" : \"Todas\",\r\n                        label: lang === \"ca\" ? \"Totes\" : \"Todas\",\r\n                    },\r\n                ]);\r\n            } else {\r\n                setSelectable((prev) => [\r\n                    ...prev,\r\n                    { value: results[i].attributes.name, label: results[i].attributes.name },\r\n                ]);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        //verifyUser();\r\n        dbRooms();\r\n        return () => {\r\n            setDisplay((dis) => ({ ...dis, timeAlert: false }));\r\n        };\r\n    }, []);\r\n\r\n    const aceptar = async () => {\r\n        await newBooking(user.id, logic.roomId, logic.dayFormatted, logic.time);\r\n        setDisplay((dis) => ({ ...dis, timeAlert: false }));\r\n    };\r\n\r\n    const cancelar = () => {\r\n        setDisplay((dis) => ({ ...dis, timeAlert: false }));\r\n    };\r\n\r\n    const colourStyles = {\r\n        control: (styles) => ({\r\n            ...styles,\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"250px\",\r\n            width: \"120px\",\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"filters\">\r\n                <div className=\"labelInput\">\r\n                    <span className=\"label\">{content.day}:</span>\r\n                    <SingleDatePicker\r\n                        date={logic.day}\r\n                        onDateChange={(date) => {\r\n                            setLogic((prev) => ({\r\n                                ...prev,\r\n                                day: date,\r\n                                dayFormatted: date.format(\"L\"),\r\n                            }));\r\n                        }}\r\n                        focused={datePicker.focus} // PropTypes.bool\r\n                        onFocusChange={({ focused }) => {\r\n                            setDayPicker(() => ({ focus: focused }));\r\n                        }}\r\n                        numberOfMonths={1}\r\n                        displayFormat={\"DD/MM/YYYY\"}\r\n                        id=\"dayComp\"\r\n                    />\r\n                </div>\r\n                <div className=\"labelInput second\">\r\n                    <span className=\"label\">{content.room}:</span>\r\n                    <Select\r\n                        styles={colourStyles}\r\n                        options={selectable}\r\n                        defaultValue={selectable[2]}\r\n                        placeholder={content.all}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"rooms\">\r\n                {rooms.map((m) => {\r\n                    return (\r\n                        <Room\r\n                            key={m._objCount}\r\n                            name={m.attributes.name}\r\n                            time={m.attributes.times}\r\n                            roomId={m.id}\r\n                            setDisplay={setDisplay}\r\n                            day={logic.day}\r\n                            noTimes={content.complete}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            <TimeAlert display={display.timeAlert} aceptar={aceptar} cancelar={cancelar} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport myspaceCa from \"../../json/myspaceCa.json\";\r\nimport myspaceEs from \"../../json/myspaceEs.json\";\r\n\r\nconst Myspace = (props) => {\r\n    const { lang } = useContext(LangContext);\r\n    const [content, setContent] = useState(\"mysapce\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => myspaceCa);\r\n        else if (lang === \"es\") setContent(() => myspaceEs);\r\n    }, [lang]);\r\n\r\n    return <div>{content.title}</div>;\r\n};\r\n\r\nexport default Myspace;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/user\";\r\n\r\nconst AppRoute = ({ component: Component, layout: Layout, render, ...rest }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!user.logged) return <Redirect to=\"/login\" />;\r\n                return Component ? (\r\n                    <Layout key=\"l\">\r\n                        <Component {...props} />\r\n                    </Layout>\r\n                ) : (\r\n                    render(props)\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default AppRoute;\r\n","import React, { useState } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Parse from \"parse\";\r\nimport Login from \"./pages/login/login\";\r\nimport Register from \"./pages/register/register\";\r\nimport Layout from \"./layouts/main/main\";\r\nimport Dashboard from \"./pages/dashboard/dashboard\";\r\nimport Myspace from \"./pages/myspace/myspace\";\r\nimport AppRoute from \"./components/appRoute/appRoute\";\r\nimport moment from \"moment\";\r\nimport { UserContext } from \"./context/user\";\r\nimport { LangContext } from \"./context/lang\";\r\nimport { MenuContext } from \"./context/menu\";\r\nimport { LogicContext } from \"./context/logic\";\r\n\r\nfunction App() {\r\n    const [lang, setLang] = useState(\"es\");\r\n    const [menu, setMenu] = useState(\"Booking\");\r\n\r\n    const [logic, setLogic] = useState({\r\n        room: \"roomName\",\r\n        roomId: \"roomId\",\r\n        day: moment(),\r\n        dayFormatted: moment().format(\"L\"),\r\n        time: \"0h-2h\",\r\n        timeId: { id: \"t0\", booked: 2 },\r\n    });\r\n    const appId = \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\";\r\n\r\n    const getUserLoged = () => {\r\n        const session = JSON.parse(localStorage.getItem(`Parse/${appId}/currentUser`));\r\n        if (session) {\r\n            return session.sessionToken\r\n                ? {\r\n                      logged: true,\r\n                      name: session.name,\r\n                      email: session.mail,\r\n                      token: session.sessionToken,\r\n                      id: session.objectId,\r\n                  }\r\n                : { logged: false };\r\n        } else return { logged: false };\r\n    };\r\n\r\n    const [user, setUser] = useState(getUserLoged());\r\n\r\n    Parse.serverURL = \"https://parseapi.back4app.com\"; // This is your Server URL\r\n    Parse.initialize(\r\n        appId,\r\n        \"YxSrKWAZV2eZw5riHbZWbKr75aBjr2NyuKrll60W\" // This is your Javascript key\r\n    );\r\n\r\n    return (\r\n        <LangContext.Provider value={{ lang, setLang }}>\r\n            <UserContext.Provider value={{ user, setUser }}>\r\n                <MenuContext.Provider value={{ menu, setMenu }}>\r\n                    <LogicContext.Provider value={{ logic, setLogic }}>\r\n                        <Switch>\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/signup\" component={Register} />\r\n                            <AppRoute path=\"/dashboard\" component={Dashboard} layout={Layout} />\r\n                            <AppRoute path=\"/myspace\" component={Myspace} layout={Layout} />\r\n                            <Redirect from=\"/\" to={\"/dashboard\"} />\r\n                        </Switch>\r\n                    </LogicContext.Provider>\r\n                </MenuContext.Provider>\r\n            </UserContext.Provider>\r\n        </LangContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}