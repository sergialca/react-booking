{"version":3,"sources":["components/submitButton/submitButton.js","components/input/input.js","components/formError/formError.js","context/user.js","components/loginForm/loginForm.js","components/transparentNav/transparentNav.js","context/lang.js","components/langDropdown/langDropdown.js","pages/login/login.js","components/registerForm/registerForm.js","components/alert/alert.js","pages/register/register.js","context/menu.js","components/navbar/navbar.js","layouts/main/main.js","context/booking.js","components/time/time.js","components/room/room.js","context/filters.js","components/submitButton/submitButtonAlert.js","components/alert/timeAlert.js","components/alert/responseAlert.js","api/api.js","pages/dashboard/dashboard.js","context/deleteBooking.js","components/deleteButton/deleteButton.js","components/row/row.js","components/table/table.js","components/alert/deleteAlert.js","pages/myspace/myspace.js","pages/profile/profile.js","components/appRoute/appRoute.js","App.js","serviceWorker.js","index.js"],"names":["SubmitButton","txt","loading","type","className","color","size","Input","children","account","accountChange","placeholder","name","value","onChange","formError","UserContext","createContext","LoginForm","content","history","useState","mail","psw","setAccount","submit","error","setError","setLoading","setUser","useContext","e","target","loginTitle","onSubmit","preventDefault","test","mailError","mailRequired","pswRule","pswRequired","Parse","User","logIn","then","newUser","logged","attributes","email","token","sessionToken","id","objectId","catch","code","submitErrorVerify","submitError","finally","pswPlaceholder","submitBtn","recoveryTxt","href","recoveryA","TransparentNav","LangContext","LangDropdown","lang","setLang","show","setShow","selectLang","la","changeShow","onClick","Login","user","setContent","useEffect","loginCa","loginEs","loginEn","push","route","to","signup","RegisterForm","showAlert","rePsw","signupTitle","nameRequired","rePswError","rePswRequired","set","signUp","submitOk","https","require","params","req","request","hostname","path","method","headers","res","setEncoding","on","chunk","console","log","message","write","end","mailVerification","namePlaceholder","rePswPlaceholder","Alert","aceptar","txtBtn","display","Register","setDisplay","registerCa","registerEs","registerEn","changeDisplay","back","accept","MenuContext","Navbar","expanded","setExpanded","setMenu","first","second","profile","selected","setSelected","selectTab","tab","brand","booking","myBooking","Layout","menu","txtMenu","setTxtMenu","navbarCa","navbarEs","navbarEn","BookingContext","Time","time","timeId","room","roomId","dayFormatted","setBooking","booked","localState","setLocalState","prev","timeAlert","Room","noTimes","map","t","timeInt","key","FiltersContext","SubmitButtonAlert","TimeAlert","cancelar","loadingBtn","filters","timeAlertSure","timeAlertDay","dayEuropean","timeAlertOf","timeAlertOk","timeAlertBad","ResponseAlert","txtOk","txtFail","response","btnTxt","url","appId","normalHeaders","saveError","description","a","axios","data","newBooking","userId","day","euroDate","__type","val","getBooking","Booking","Object","extend","queryRoom","Query","equalTo","select","queryDay","composedQuery","and","find","result","getRooms","rooms","query","roomsRes","getRoom","roomName","Rooms","getUserBookings","current","getRoomById","get","deleteBooking","obToDelete","destroy","bookingMail","www","window","location","host","logout","logOut","Dashboard","props","setFilters","responseAlert","focus","datePicker","setDayPicker","selectable","setSelectable","setRooms","dashboardCa","dashboardEs","dashboardEn","changeLangSelect","dbRooms","resRooms","i","bo","length","tt","times","et","pos","splice","dayPicker","dbRoom","label","selectableRooms","results","dis","aceptarTimeAlert","aceptarResponseAlert","colourStyles","control","styles","backgroundColor","borderRadius","width","fontSize","padding","successAlertOkTxt","successAlertFailTxt","successAlertBtn","date","onDateChange","format","month","year","isSunday","focused","onFocusChange","numberOfMonths","displayFormat","readOnly","firstDayOfWeek","isOutsideRange","isBefore","moment","hours","isAfter","add","options","defaultValue","all","close","m","_objCount","complete","DeleteContext","DeleteButton","setDeleteData","deleted","deleteAlert","Row","deleteData","setDeleted","rowid","Table","header","h","unique","el","DeleteAlert","cancel","deleteSure","deleteThe","deleteAt","Myspace","tableCol","setTableCol","tableData","setTableData","myspaceCa","myspaceEs","myspaceEn","getColumns","dbUserBoo","ob","acceptDeleteAlert","empty","Profile","profileCa","profileEs","profileEn","onLogout","AppRoute","Component","component","layout","render","rest","App","session","JSON","parse","localStorage","getItem","getUserLoged","serverURL","initialize","Provider","exact","Boolean","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d949cf5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"./submitButton.scss\";\r\nconst SubmitButton = ({ txt, loading }) => {\r\n    return (\r\n        <button type=\"submit\" className=\"submitBtn\">\r\n            {txt}\r\n            <span className=\"spin\">\r\n                <ClipLoader loading={loading} color={\"#fff\"} size={12} />\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\nimport \"./input.scss\";\r\n\r\nconst Input = ({ children, account, accountChange, placeholder, type, name }) => {\r\n    return (\r\n        <div className=\"inputWrapper center space\">\r\n            {children}\r\n            <input\r\n                className=\"input\"\r\n                name={name}\r\n                type={type}\r\n                value={account}\r\n                onChange={accountChange}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./formError.scss\";\r\n\r\nconst formError = ({ txt }) => {\r\n    return <div className=\"loginError\">{txt}</div>;\r\n};\r\n\r\nexport default formError;\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(\"h\");\r\n","import React, { useState, useContext } from \"react\";\r\nimport { MdMail } from \"react-icons/md\";\r\nimport { BsLockFill } from \"react-icons/bs\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport Input from \"../input/input\";\r\nimport FormError from \"../formError/formError\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport Parse from \"parse\";\r\nimport \"./loginForm.scss\";\r\n\r\nconst LoginForm = ({ content, history }) => {\r\n    const [account, setAccount] = useState({ mail: \"\", psw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\", submit: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n    const { setUser } = useContext(UserContext);\r\n\r\n    const accountChange = (e) => {\r\n        setError((error) => ({ ...error, mail: \"\", psw: \"\" }));\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const validMail = () => {\r\n        if (\r\n            account.mail &&\r\n            !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                account.mail\r\n            )\r\n        ) {\r\n            setError((error) => ({ ...error, mail: content.mailError }));\r\n            return false;\r\n        } else if (!account.mail) {\r\n            setError((error) => ({ ...error, mail: content.mailRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, mail: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validPsw = () => {\r\n        if (account.psw && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(account.psw)) {\r\n            setError((error) => ({ ...error, psw: content.pswRule }));\r\n            return false;\r\n        } else if (!account.psw) {\r\n            setError((error) => ({ ...error, psw: content.pswRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, psw: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError((error) => ({ ...error, submit: \"\" }));\r\n        const mail = validMail();\r\n        const psw = validPsw();\r\n        if (mail && psw) {\r\n            Parse.User.logIn(account.mail, account.psw)\r\n                .then((newUser) => {\r\n                    setUser({\r\n                        logged: true,\r\n                        name: newUser.attributes.name,\r\n                        mail: newUser.attributes.email,\r\n                        token: newUser.attributes.sessionToken,\r\n                        id: newUser.attributes.objectId,\r\n                    });\r\n                    history(\"\");\r\n                })\r\n                .catch((error) => {\r\n                    error.code === 205\r\n                        ? setError((error) => ({ ...error, submit: content.submitErrorVerify }))\r\n                        : setError((error) => ({ ...error, submit: content.submitError }));\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        } else setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <p className=\"loginTxt\">{content.loginTitle}</p>\r\n            <form className=\"loginForm\" onSubmit={logIn}>\r\n                <Input\r\n                    name=\"mail\"\r\n                    account={account.mail}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Mail\"\r\n                    type=\"mail\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <MdMail />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.mail} />\r\n                <Input\r\n                    name=\"psw\"\r\n                    account={account.psw}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.pswPlaceholder}\r\n                    type=\"password\"\r\n                >\r\n                    <span>\r\n                        <BsLockFill />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.psw} />\r\n                <div className=\"loginBtnWrapper space\">\r\n                    <SubmitButton loading={loading} txt={content.submitBtn} />\r\n                </div>\r\n                <FormError txt={error.submit} />\r\n                <div className=\"space recover\">\r\n                    <span>\r\n                        {content.recoveryTxt}{\" \"}\r\n                        <a href=\"mailto:support@gmail.com\">{content.recoveryA}</a>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./transparentNav.scss\";\r\n\r\nconst TransparentNav = ({ children }) => {\r\n    return <div className=\"transparentNav\">{children}</div>;\r\n};\r\n\r\nexport default TransparentNav;\r\n","import { createContext } from \"react\";\r\n\r\nexport const LangContext = createContext(\"\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport \"./langDropdown.scss\";\r\n\r\nconst LangDropdown = () => {\r\n    const { lang, setLang } = useContext(LangContext);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const selectLang = (la) => {\r\n        if (la === \"ca\") {\r\n            setLang(\"ca\");\r\n        } else if (la === \"es\") {\r\n            setLang(\"es\");\r\n        } else if (la === \"en\") {\r\n            setLang(\"en\");\r\n        }\r\n        setShow((show) => !show);\r\n    };\r\n\r\n    const changeShow = () => {\r\n        setShow((show) => !show);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div onClick={changeShow} className=\"dropbtn\">\r\n                {lang === \"es\" ? \"ESP\" : lang === \"ca\" ? \"CAT\" : \"ENG\"}\r\n            </div>\r\n            <div onClick={changeShow} className=\"arrow\"></div>\r\n            <div className={show ? \"dropdown-content\" : \"noDropdown\"}>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"es\")}>\r\n                    ESP\r\n                </div>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"ca\")}>\r\n                    CAT\r\n                </div>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"en\")}>\r\n                    ENG\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LangDropdown;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginForm from \"../../components/loginForm/loginForm\";\r\nimport TransparentNav from \"../../components/transparentNav/transparentNav\";\r\nimport LangDropdown from \"../../components/langDropdown/langDropdown\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport loginEs from \"../../json/loginEs.json\";\r\nimport loginCa from \"../../json/loginCa.json\";\r\nimport loginEn from \"../../json/loginEn.json\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = ({ history }) => {\r\n    const { lang } = useContext(LangContext);\r\n    const { user } = useContext(UserContext);\r\n    const [content, setContent] = useState(\"login\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => loginCa);\r\n        else if (lang === \"es\") setContent(() => loginEs);\r\n        else if (lang === \"en\") setContent(() => loginEn);\r\n    }, [lang]);\r\n\r\n    const changeRoute = (route) => {\r\n        history.push(`/${route}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (user.logged) history.push(`/`);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <TransparentNav>\r\n                <LangDropdown />\r\n            </TransparentNav>\r\n            <div className=\"login\">\r\n                <div className=\"formContainer fade\">\r\n                    <LoginForm history={changeRoute} content={content} />\r\n                    <div className=\"linkWrap\">\r\n                        <Link to={`/signup`}>{content.signup}</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { MdMail, MdInfo } from \"react-icons/md\";\r\nimport { BsLockFill, BsPersonFill } from \"react-icons/bs\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport Input from \"../input/input\";\r\nimport FormError from \"../formError/formError\";\r\nimport Parse from \"parse\";\r\nimport \"./registerForm.scss\";\r\n\r\nconst RegisterForm = ({ showAlert, content }) => {\r\n    const [account, setAccount] = useState({ mail: \"\", psw: \"\", name: \"\", rePsw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\", rePsw: \"\", name: \"\", submit: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const accountChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const validMail = () => {\r\n        if (\r\n            account.mail &&\r\n            !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                account.mail\r\n            )\r\n        ) {\r\n            setError((error) => ({ ...error, mail: content.mailError }));\r\n            return false;\r\n        } else if (!account.mail) {\r\n            setError((error) => ({ ...error, mail: content.mailRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, mail: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validPsw = () => {\r\n        if (account.psw && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(account.psw)) {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: content.pswRule,\r\n            }));\r\n            return false;\r\n        } else if (!account.psw) {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: content.pswRequired,\r\n            }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: \"\",\r\n            }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validRePsw = () => {\r\n        if (account.psw !== account.rePsw) {\r\n            setError((error) => ({ ...error, rePsw: content.rePswError }));\r\n            return false;\r\n        } else if (!account.rePsw) {\r\n            setError((error) => ({ ...error, rePsw: content.rePswRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, rePsw: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validName = () => {\r\n        if (!account.name) {\r\n            setError((error) => ({ ...error, name: content.nameRequired }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, name: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const mailVerification = () => {\r\n        const https = require(\"https\");\r\n        const params = { email: account.mail };\r\n        const options = {\r\n            hostname: \"https://parseapi.back4app.com\",\r\n            path: \"/verificationEmailRequest\",\r\n            method: \"POST\",\r\n            headers: {\r\n                \"X-Parse-Application-Id\": \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\",\r\n                \"X-Parse-REST-API-Key\": \"od4o0RAtgQzAICZY1LdEiVrItZN2trnrtcQX4hve\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const req = https.request(options, (res) => {\r\n            res.setEncoding(\"utf8\");\r\n            res.on(\"data\", (chunk) => {\r\n                console.log(`BODY: ${chunk}`);\r\n            });\r\n            res.on(\"end\", () => {\r\n                console.log(\"No more data in response.\");\r\n            });\r\n        });\r\n\r\n        req.on(\"error\", (e) => {\r\n            console.error(`Problem with request: ${e.message}`);\r\n        });\r\n        req.write(params);\r\n        req.end();\r\n    };\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError((error) => ({ ...error, submit: \"\" }));\r\n        const mail = validMail();\r\n        const name = validName();\r\n        const psw = validPsw();\r\n        const rePsw = validRePsw();\r\n        if (mail && psw && rePsw && name) {\r\n            const user = new Parse.User();\r\n            user.set(\"username\", account.mail);\r\n            user.set(\"email\", account.mail);\r\n            user.set(\"password\", account.psw);\r\n            user.set(\"name\", account.name);\r\n            user.signUp()\r\n                .then((user) => {\r\n                    setError((error) => ({ ...error, submit: content.submitOk }));\r\n                    mailVerification();\r\n                })\r\n                .catch((error) => {\r\n                    setError((error) => ({ ...error, submit: content.submitError }));\r\n                })\r\n                .finally(() => setLoading(false));\r\n        } else setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <p className=\"signinTxt\">{content.signupTitle}</p>\r\n            <form className=\"signinForm\" onSubmit={signIn}>\r\n                <Input\r\n                    name=\"name\"\r\n                    account={account.name}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.namePlaceholder}\r\n                    type=\"\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <BsPersonFill />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.name} />\r\n                <Input\r\n                    name=\"mail\"\r\n                    account={account.mail}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Mail\"\r\n                    type=\"mail\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <MdMail />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.mail} />\r\n                <div className=\"inputInfoContainer space\">\r\n                    <div className=\"inputInfoWrapper\">\r\n                        <span>\r\n                            <BsLockFill />\r\n                        </span>\r\n                        <input\r\n                            className=\"inputInfo\"\r\n                            name=\"psw\"\r\n                            type=\"password\"\r\n                            value={account.psw}\r\n                            onChange={accountChange}\r\n                            placeholder={content.pswPlaceholder}\r\n                        />\r\n                    </div>\r\n                    <MdInfo onClick={() => showAlert()} className=\"info\" />\r\n                </div>\r\n                <FormError txt={error.psw} />\r\n                <Input\r\n                    name=\"rePsw\"\r\n                    account={account.rePsw}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.rePswPlaceholder}\r\n                    type=\"password\"\r\n                >\r\n                    <span>\r\n                        <BsLockFill />\r\n                    </span>\r\n                </Input>\r\n                <FormError txt={error.rePsw} />\r\n                <div className=\"signinBtnWrapper\">\r\n                    <SubmitButton loading={loading} txt={content.submitBtn} />\r\n                </div>\r\n                <FormError txt={error.submit} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport \"./alert.scss\";\r\nconst Alert = ({ txt, aceptar, txtBtn, display }) => {\r\n    return (\r\n        <div className={display ? \"alert\" : \"noAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <div className=\"txtWrap\">\r\n                        <span className=\"txt\">{txt}</span>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <button className=\"btn\" onClick={() => aceptar()}>\r\n                            {txtBtn}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RegisterForm from \"../../components/registerForm/registerForm\";\r\nimport Alert from \"../../components/alert/alert\";\r\nimport TransparentNav from \"../../components/transparentNav/transparentNav\";\r\nimport LangDropdown from \"../../components/langDropdown/langDropdown\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport registerCa from \"../../json/registerCa.json\";\r\nimport registerEs from \"../../json/registerEs.json\";\r\nimport registerEn from \"../../json/registerEn.json\";\r\nimport \"./register.scss\";\r\n\r\nconst Register = ({ history }) => {\r\n    const { lang } = useContext(LangContext);\r\n    const { user } = useContext(UserContext);\r\n    const [display, setDisplay] = useState(false);\r\n    const [content, setContent] = useState(\"singup\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => registerCa);\r\n        else if (lang === \"es\") setContent(() => registerEs);\r\n        else if (lang === \"en\") setContent(() => registerEn);\r\n    }, [lang]);\r\n\r\n    useEffect(() => {\r\n        if (user.logged) history.push(`/`);\r\n    }, []);\r\n\r\n    const changeDisplay = () => {\r\n        setDisplay(!display);\r\n    };\r\n\r\n    const changeRoute = (route) => {\r\n        history.push(`/${route}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TransparentNav>\r\n                <LangDropdown />\r\n            </TransparentNav>\r\n            <div className=\"register\">\r\n                <div className=\"formContainer fade\">\r\n                    <RegisterForm\r\n                        history={changeRoute}\r\n                        content={content}\r\n                        showAlert={changeDisplay}\r\n                    />\r\n                    <div className=\"linkWrap\">\r\n                        <Link to={`/login`}>{content.back}</Link>\r\n                    </div>\r\n                </div>\r\n                <Alert\r\n                    txt={content.pswRule}\r\n                    txtBtn={content.accept}\r\n                    display={display}\r\n                    aceptar={changeDisplay}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import { createContext } from \"react\";\r\n\r\nexport const MenuContext = createContext(\"m\");\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiThMenu } from \"react-icons/ti\";\r\nimport { GoPerson } from \"react-icons/go\";\r\nimport LangDropdown from \"../langDropdown/langDropdown\";\r\nimport { MenuContext } from \"../../context/menu\";\r\nimport \"./navbar.scss\";\r\n\r\nconst Navbar = ({ content }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const { setMenu } = useContext(MenuContext);\r\n    const [selected, setSelected] = useState({ first: true, second: false, profile: false });\r\n\r\n    const onExpand = () => {\r\n        setExpanded((expanded) => !expanded);\r\n    };\r\n\r\n    const selectTab = (tab) => {\r\n        switch (tab) {\r\n            case \"1\":\r\n                setSelected(() => ({ first: true, second: false }));\r\n                setMenu(() => \"Reservar\");\r\n                break;\r\n            case \"2\":\r\n                setSelected(() => ({ first: false, second: true }));\r\n                setMenu(() => \"Mis\");\r\n                break;\r\n            case \"profile\":\r\n                setSelected(() => ({ first: false, second: false, profile: true }));\r\n                setMenu(() => \"Profile\");\r\n                break;\r\n            default:\r\n                setSelected(() => ({ first: true, second: false }));\r\n                break;\r\n        }\r\n        setExpanded(() => false);\r\n    };\r\n\r\n    return (\r\n        <div className={expanded ? \"navbar expand\" : \"navbar\"}>\r\n            <Link onClick={() => selectTab(\"1\")} className=\"link brand\" to=\"/dashboard\">\r\n                {content.brand}\r\n            </Link>\r\n            <div className={expanded ? \"panel expand\" : \"panel\"}>\r\n                <Link\r\n                    onClick={() => selectTab(\"1\")}\r\n                    className={selected.first ? \"link selected\" : \"link\"}\r\n                    to=\"/\"\r\n                >\r\n                    {content.booking}\r\n                </Link>\r\n                <Link\r\n                    onClick={() => selectTab(\"2\")}\r\n                    className={selected.second ? \"link selected\" : \"link\"}\r\n                    to=\"/myspace\"\r\n                >\r\n                    {content.myBooking}\r\n                </Link>\r\n                <div className=\"lang\">\r\n                    <LangDropdown />\r\n                </div>\r\n            </div>\r\n            <Link to=\"/profile\" onClick={() => selectTab(\"profile\")}>\r\n                <div className={selected.profile ? \"profile selected\" : \"profile\"}>\r\n                    <GoPerson />\r\n                </div>\r\n            </Link>\r\n            <div className=\"icon\" onClick={onExpand}>\r\n                <TiThMenu />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport { MenuContext } from \"../../context/menu\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport navbarCa from \"../../json/navbarCa.json\";\r\nimport navbarEs from \"../../json/navbarEs.json\";\r\nimport navbarEn from \"../../json/navbarEn.json\";\r\nimport \"./main.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n    const { menu } = useContext(MenuContext);\r\n    const { lang } = useContext(LangContext);\r\n    const [content, setContent] = useState(\"login\");\r\n    const [txtMenu, setTxtMenu] = useState(\"b\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => navbarCa);\r\n        else if (lang === \"es\") setContent(() => navbarEs);\r\n        else if (lang === \"en\") setContent(() => navbarEn);\r\n    }, [lang]);\r\n\r\n    useEffect(() => {\r\n        switch (menu) {\r\n            case \"Reservar\":\r\n                setTxtMenu(() =>\r\n                    lang === \"ca\" ? \"Reservar\" : lang === \"es\" ? \"Reservar\" : \"Booking\"\r\n                );\r\n                break;\r\n            case \"Mis\":\r\n                setTxtMenu(() =>\r\n                    lang === \"ca\"\r\n                        ? \"Les meves reserves\"\r\n                        : lang === \"es\"\r\n                        ? \"Mis reservas\"\r\n                        : \"My Bookings\"\r\n                );\r\n                break;\r\n            case \"Profile\":\r\n                setTxtMenu(() =>\r\n                    lang === \"ca\"\r\n                        ? \"Perfil d'usuari\"\r\n                        : lang === \"es\"\r\n                        ? \"Perfil de usuario\"\r\n                        : \"Profile\"\r\n                );\r\n                break;\r\n            default:\r\n                setTxtMenu(() => \"Booking\");\r\n        }\r\n    }, [menu, lang]);\r\n\r\n    return (\r\n        <div className=\"layout\">\r\n            <Navbar content={content} />\r\n            <div className=\"header\">{txtMenu}</div>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { createContext } from \"react\";\r\n\r\nexport const BookingContext = createContext(\"b\");\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { BookingContext } from \"../../context/booking\";\r\nimport \"./time.scss\";\r\n\r\nconst Time = ({ time, timeId, room, roomId, setDisplay, dayFormatted }) => {\r\n    const { booking, setBooking } = useContext(BookingContext);\r\n    const [localState, setLocalState] = useState({\r\n        dayFormatted,\r\n        timeId,\r\n        time,\r\n        booked: false,\r\n    });\r\n\r\n    const onTimeClick = () => {\r\n        setBooking(() => ({\r\n            dayFormatted,\r\n            room,\r\n            roomId,\r\n            time,\r\n            timeId,\r\n            booked: false,\r\n        }));\r\n        setDisplay((prev) => ({ ...prev, timeAlert: true }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (booking.dayFormatted === localState.dayFormatted) {\r\n            if (booking.timeId === localState.timeId && booking.booked) {\r\n                setLocalState((prev) => ({ ...prev, booked: true }));\r\n            }\r\n        }\r\n    }, [booking.booked]);\r\n\r\n    return (\r\n        <div className={localState.booked ? \"noTime\" : \"timebadge\"} onClick={() => onTimeClick()}>\r\n            <span>{time}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport Time from \"../time/time\";\r\nimport \"./room.scss\";\r\n\r\nconst Room = ({ name, time, roomId, dayFormatted, setDisplay, noTimes }) => {\r\n    return (\r\n        <div className=\"room\">\r\n            <div className=\"title\">{name}</div>\r\n            <div className=\"time\">\r\n                {time.map((t) => {\r\n                    return typeof t === \"string\" ? (\r\n                        noTimes\r\n                    ) : (\r\n                        <Time\r\n                            time={t.timeInt}\r\n                            key={t.id}\r\n                            timeId={t.id}\r\n                            room={name}\r\n                            roomId={roomId}\r\n                            setDisplay={setDisplay}\r\n                            dayFormatted={dayFormatted}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","import { createContext } from \"react\";\r\n\r\nexport const FiltersContext = createContext(\"f\");\r\n","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"./submitButtonAlert.scss\";\r\nconst SubmitButtonAlert = ({ txt, loading, aceptar }) => {\r\n    return (\r\n        <button className=\"submitBtnAlert\" onClick={() => aceptar()}>\r\n            {txt}\r\n            <span className=\"spin\">\r\n                <ClipLoader loading={loading} color={\"#fff\"} size={12} />\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SubmitButtonAlert;\r\n","import React, { useContext } from \"react\";\r\nimport { BookingContext } from \"../../context/booking\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { FiltersContext } from \"../../context/filters\";\r\nimport SubmitButtonAlert from \"../submitButton/submitButtonAlert\";\r\nimport \"./timeAlert.scss\";\r\n\r\nconst TimeAlert = ({ aceptar, display, cancelar, txt, loadingBtn }) => {\r\n    const { booking } = useContext(BookingContext);\r\n    const { filters } = useContext(FiltersContext);\r\n    const { lang } = useContext(LangContext);\r\n\r\n    return (\r\n        <div className={display ? \"timeAlert\" : \"noTimeAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <div className=\"txtWrap\">\r\n                        <div className=\"inline\">\r\n                            <MdInfo className=\"icon\" />\r\n                            <span className=\"txt\">\r\n                                {`${txt.timeAlertSure} ${booking.room} ${txt.timeAlertDay}`}{\" \"}\r\n                                {lang === \"ca\"\r\n                                    ? filters.dayEuropean\r\n                                    : lang === \"es\"\r\n                                    ? filters.dayEuropean\r\n                                    : filters.dayFormatted}{\" \"}\r\n                                {`${txt.timeAlertOf} ${booking.time}?`}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <SubmitButtonAlert\r\n                            txt={txt.timeAlertOk}\r\n                            loading={loadingBtn}\r\n                            aceptar={aceptar}\r\n                        />\r\n                        <button className=\"btnCancel\" onClick={() => cancelar()}>\r\n                            {txt.timeAlertBad}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeAlert;\r\n","import React from \"react\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport \"./responseAlert.scss\";\r\n\r\nconst ResponseAlert = ({ aceptar, display, txtOk, txtFail, response, btnTxt }) => {\r\n    return (\r\n        <div className={display ? \"responseAlert\" : \"noResponseAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className={response === \"ok\" ? \"info success\" : \"info fail\"}>\r\n                    <div className=\"txtWrap\">\r\n                        <div className=\"inline\">\r\n                            <MdInfo className=\"icon\" />\r\n                            <span className=\"txt\">{response === \"ok\" ? txtOk : txtFail}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <button className=\"btn aceptar\" onClick={() => aceptar()}>\r\n                            {btnTxt}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResponseAlert;\r\n","import axios from \"axios\";\r\nimport Parse from \"parse\";\r\n\r\nconst url = \"https://parseapi.back4app.com\";\r\nconst appId = \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\";\r\nconst normalHeaders = {\r\n    \"X-Parse-Application-Id\": appId,\r\n    \"X-Parse-REST-API-Key\": \"od4o0RAtgQzAICZY1LdEiVrItZN2trnrtcQX4hve\",\r\n    \"Content-Type\": \"application/json\",\r\n};\r\nconst saveError = async (e, description) => {\r\n    if (e.mail) {\r\n        await axios({\r\n            method: \"post\",\r\n            url: `${url}/classes/Errors`,\r\n            headers: normalHeaders,\r\n            data: {\r\n                code: 401,\r\n                error: \"Network Error\",\r\n                description,\r\n            },\r\n        });\r\n    } else {\r\n        await axios({\r\n            method: \"post\",\r\n            url: `${url}/classes/Errors`,\r\n            headers: normalHeaders,\r\n            data: {\r\n                code: e.response.data.code,\r\n                error: e.response.data.error,\r\n                description,\r\n            },\r\n        });\r\n    }\r\n\r\n    return;\r\n};\r\n\r\nexport const getValUserLoged = async (token) => {\r\n    try {\r\n        const val = await axios({\r\n            method: \"get\",\r\n            url: `${url}/users/me`,\r\n            headers: {\r\n                \"X-Parse-Application-Id\": appId,\r\n                \"X-Parse-REST-API-Key\": \"od4o0RAtgQzAICZY1LdEiVrItZN2trnrtcQX4hve\",\r\n                \"X-Parse-Session-Token\": token,\r\n            },\r\n        });\r\n        return val;\r\n    } catch (e) {\r\n        saveError(e, \"El token no se ha encontrado al verificar usuario\");\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const isUserLoged = async () => {\r\n    const session = JSON.parse(localStorage.getItem(`Parse/${appId}/currentUser`));\r\n    const localUser = session ? await getValUserLoged(session.sessionToken) : \"\";\r\n    return localUser ? true : false;\r\n};\r\n\r\nexport const newBooking = async (userId, roomId, day, time, timeId, euroDate) => {\r\n    try {\r\n        const val = await axios({\r\n            method: \"post\",\r\n            url: `${url}/classes/Booking`,\r\n            headers: normalHeaders,\r\n            data: {\r\n                user: { __type: \"Pointer\", className: \"_User\", objectId: userId },\r\n                day,\r\n                time,\r\n                timeId,\r\n                euroDate,\r\n                room: { __type: \"Pointer\", className: \"Rooms\", objectId: roomId },\r\n            },\r\n        });\r\n        return val.data;\r\n    } catch (e) {\r\n        saveError(e, \"Fallo al crear reserva\");\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const getBooking = async (day, roomId) => {\r\n    const Booking = Parse.Object.extend(\"Booking\");\r\n    const queryRoom = new Parse.Query(Booking);\r\n    queryRoom.equalTo(\"room\", { __type: \"Pointer\", className: \"Rooms\", objectId: roomId });\r\n    queryRoom.select(\"time\");\r\n    const queryDay = new Parse.Query(Booking);\r\n    queryDay.equalTo(\"day\", day);\r\n    queryDay.select(\"time\");\r\n    const composedQuery = Parse.Query.and(queryRoom, queryDay);\r\n    let result = await composedQuery.find();\r\n    return result;\r\n};\r\n\r\nexport const getRooms = async () => {\r\n    const rooms = Parse.Object.extend(\"Rooms\");\r\n    const query = new Parse.Query(rooms);\r\n    let roomsRes = await query.find();\r\n    return roomsRes;\r\n};\r\n\r\nexport const getRoom = async (roomName) => {\r\n    const Rooms = Parse.Object.extend(\"Rooms\");\r\n    const query = new Parse.Query(Rooms);\r\n    query.equalTo(\"name\", roomName);\r\n    let res = await query.find();\r\n    return res;\r\n};\r\n\r\nexport const getUserBookings = async () => {\r\n    const Booking = Parse.Object.extend(\"Booking\");\r\n    const query = new Parse.Query(Booking);\r\n    query.equalTo(\"user\", Parse.User.current());\r\n    let result = await query.find();\r\n    return result;\r\n};\r\n\r\nexport const getRoomById = async (id) => {\r\n    const Rooms = Parse.Object.extend(\"Rooms\");\r\n    const query = new Parse.Query(Rooms);\r\n    let res = await query.get(id);\r\n    return res;\r\n};\r\n\r\nexport const deleteBooking = async (id) => {\r\n    const Booking = Parse.Object.extend(\"Booking\");\r\n    const query = new Parse.Query(Booking);\r\n    let obToDelete = await query.get(id);\r\n    await obToDelete.destroy();\r\n    return;\r\n};\r\n\r\nexport const bookingMail = async (lang, mail, room, dayFormatted, dayEuropean, time) => {\r\n    try {\r\n        const send = await axios({\r\n            method: \"post\",\r\n            url: \"https://taptime-server.herokuapp.com/api/mail/create\",\r\n            data: {\r\n                lang,\r\n                mail,\r\n                room,\r\n                dayFormatted,\r\n                euroDate: dayEuropean,\r\n                time,\r\n                www: window.location.host,\r\n            },\r\n        });\r\n        return;\r\n    } catch (e) {\r\n        if (e.response) {\r\n            saveError(e, \"Fallo al enviar mail de crear nueva reserva\");\r\n        } else {\r\n            e.mail = true;\r\n            saveError(e, \"Fallo al enviar mail de crear nueva reserva\");\r\n        }\r\n        return;\r\n    }\r\n};\r\n\r\nexport const deleteMail = async (lang, mail, room, day, euroDate, time) => {\r\n    try {\r\n        const send = await axios({\r\n            method: \"post\",\r\n            url: \"https://taptime-server.herokuapp.com/api/mail/delete\",\r\n            data: {\r\n                lang,\r\n                mail,\r\n                room,\r\n                day,\r\n                euroDate,\r\n                time,\r\n                www: window.location.host,\r\n            },\r\n        });\r\n        return;\r\n    } catch (e) {\r\n        if (e.response) {\r\n            saveError(e, \"Fallo al enviar mail de borrar reserva\");\r\n        } else {\r\n            e.mail = true;\r\n            saveError(e, \"Fallo al enviar mail de borrar reserva\");\r\n        }\r\n        return;\r\n    }\r\n};\r\n\r\nexport const logout = async () => {\r\n    const noUser = await Parse.User.logOut();\r\n    return;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport dashboardCa from \"../../json/dashboardCa.json\";\r\nimport dashboardEs from \"../../json/dashboardEs.json\";\r\nimport dashboardEn from \"../../json/dashboardEn.json\";\r\nimport Room from \"../../components/room/room\";\r\nimport Select from \"react-select\";\r\nimport TimeAlert from \"../../components/alert/timeAlert\";\r\nimport ResponseAlert from \"../../components/alert/responseAlert\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { FiltersContext } from \"../../context/filters\";\r\nimport { BookingContext } from \"../../context/booking\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport {\r\n    newBooking,\r\n    getValUserLoged,\r\n    getRooms,\r\n    getBooking,\r\n    getRoom,\r\n    bookingMail,\r\n} from \"../../api/api\";\r\nimport moment from \"moment\";\r\nimport \"./dashboard.scss\";\r\n\r\nconst Dashboard = (props) => {\r\n    const { lang } = useContext(LangContext);\r\n    const { filters, setFilters } = useContext(FiltersContext);\r\n    const { booking, setBooking } = useContext(BookingContext);\r\n    const { user } = useContext(UserContext);\r\n    const [display, setDisplay] = useState({\r\n        timeAlert: false,\r\n        loading: false,\r\n        loadingBtn: false,\r\n        responseAlert: false,\r\n        response: \"ok\",\r\n    });\r\n    const [datePicker, setDayPicker] = useState({ focus: false });\r\n    const [selectable, setSelectable] = useState([]);\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    const selectLang = () => {\r\n        if (lang === \"ca\") {\r\n            return dashboardCa;\r\n        } else if (lang === \"es\") {\r\n            return dashboardEs;\r\n        } else if (lang === \"en\") {\r\n            return dashboardEn;\r\n        }\r\n    };\r\n    const [content, setContent] = useState(selectLang());\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") {\r\n            setContent(() => dashboardCa);\r\n        } else if (lang === \"es\") {\r\n            setContent(() => dashboardEs);\r\n        } else if (lang === \"en\") {\r\n            setContent(() => dashboardEn);\r\n        }\r\n        changeLangSelect();\r\n    }, [lang]);\r\n\r\n    const verifyUser = async () => {\r\n        const currentUser = await getValUserLoged(user.token);\r\n        console.log(\"verifyUser -> currentUser\", currentUser);\r\n        return currentUser ? \"\" : props.history.push(\"/login\");\r\n    };\r\n\r\n    const dbRooms = async () => {\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            loading: true,\r\n        }));\r\n        const resRooms = await getRooms();\r\n        for (let i = 0; i < resRooms.length; i++) {\r\n            const bo = await getBooking(filters.dayFormatted, resRooms[i].id);\r\n            if (bo.length > 0) {\r\n                const reNew = bo.map((t) => {\r\n                    return t.attributes.time;\r\n                });\r\n                reNew.map((tt) => {\r\n                    resRooms[i].attributes.times.map((et, pos) => {\r\n                        if (tt === et.timeInt) resRooms[i].attributes.times.splice(pos, 1);\r\n                        return tt;\r\n                    });\r\n                    return tt;\r\n                });\r\n            }\r\n            if (resRooms[i].attributes.times.length === 0) {\r\n                resRooms[i].attributes.times.push(\"No time available\");\r\n            }\r\n            if (i === 0) setRooms(() => [resRooms[i]]);\r\n            else setRooms((prev) => [...prev, resRooms[i]]);\r\n        }\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n        }));\r\n        setFilters((prev) => ({ ...prev, select: false, dayPicker: false }));\r\n        return;\r\n    };\r\n\r\n    const dbRoom = async () => {\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            loading: true,\r\n        }));\r\n        const resRooms = await getRoom(filters.room);\r\n        const bo = await getBooking(filters.dayFormatted, resRooms[0].id);\r\n        if (bo.length > 0) {\r\n            const reNew = bo.map((t) => {\r\n                return t.attributes.time;\r\n            });\r\n            reNew.map((tt) => {\r\n                resRooms[0].attributes.times.map((et, pos) => {\r\n                    if (tt === et.timeInt) resRooms[0].attributes.times.splice(pos, 1);\r\n                    return tt;\r\n                });\r\n                return tt;\r\n            });\r\n        }\r\n        if (resRooms[0].attributes.times.length === 0) {\r\n            resRooms[0].attributes.times.push(\"No time available\");\r\n        }\r\n        setRooms(() => [resRooms[0]]);\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n        }));\r\n        setFilters((prev) => ({ ...prev, select: false, dayPicker: false }));\r\n        return;\r\n    };\r\n\r\n    const changeLangSelect = () => {\r\n        const leng = selectable.length;\r\n        if (leng > 0) {\r\n            for (let i = 0; i < selectable.length; i++) {\r\n                if (i === selectable.length - 1) {\r\n                    //Should use setSelectable?\r\n                    selectable[i].label = lang === \"ca\" ? \"Totes\" : lang === \"es\" ? \"Todas\" : \"All\";\r\n                    //setSelectable(() => selectable);?\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const selectableRooms = async () => {\r\n        const results = await getRooms();\r\n        for (let i = 0; i < results.length; i++) {\r\n            if (i === 0) {\r\n                setSelectable(() => [{ value: results[i].id, label: results[i].attributes.name }]);\r\n            } else if (i === results.length - 1) {\r\n                setSelectable((prev) => [\r\n                    ...prev,\r\n                    { value: results[i].id, label: results[i].attributes.name },\r\n                    {\r\n                        value: \"all\",\r\n                        label: lang === \"ca\" ? \"Totes\" : lang === \"es\" ? \"Todas\" : \"All\",\r\n                    },\r\n                ]);\r\n            } else {\r\n                setSelectable((prev) => [\r\n                    ...prev,\r\n                    { value: results[i].attributes.name, label: results[i].attributes.name },\r\n                ]);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        //verifyUser();\r\n        selectableRooms();\r\n        dbRooms();\r\n        return () => {\r\n            setDisplay((dis) => ({ ...dis, timeAlert: false }));\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (filters.select || filters.dayPicker) {\r\n            if (filters.roomId === \"all\") {\r\n                dbRooms();\r\n            } else {\r\n                dbRoom();\r\n            }\r\n        }\r\n    }, [filters.select, filters.dayPicker]);\r\n\r\n    const aceptarTimeAlert = async () => {\r\n        setDisplay((prev) => ({ ...prev, loadingBtn: true }));\r\n        const newBo = await newBooking(\r\n            user.id,\r\n            booking.roomId,\r\n            booking.dayFormatted,\r\n            booking.time,\r\n            booking.timeId,\r\n            filters.dayEuropean\r\n        );\r\n        if (newBo) {\r\n            setBooking((prev) => ({\r\n                ...prev,\r\n                booked: true,\r\n            }));\r\n            bookingMail(\r\n                lang,\r\n                user.mail,\r\n                booking.room,\r\n                filters.dayFormatted,\r\n                filters.dayEuropean,\r\n                booking.time\r\n            );\r\n            setDisplay((dis) => ({\r\n                ...dis,\r\n                timeAlert: false,\r\n                responseAlert: true,\r\n                loadingBtn: false,\r\n                response: \"ok\",\r\n            }));\r\n        } else\r\n            setDisplay((dis) => ({\r\n                ...dis,\r\n                timeAlert: false,\r\n                responseAlert: true,\r\n                loadingBtn: false,\r\n                response: \"fail\",\r\n            }));\r\n    };\r\n\r\n    const cancelar = () => {\r\n        setDisplay((dis) => ({ ...dis, timeAlert: false }));\r\n    };\r\n\r\n    const aceptarResponseAlert = async () => {\r\n        setDisplay((dis) => ({ ...dis, responseAlert: false }));\r\n    };\r\n\r\n    const colourStyles = {\r\n        control: (styles) => ({\r\n            ...styles,\r\n            backgroundColor: \"white\",\r\n            borderRadius: \"250px\",\r\n            width: \"120px\",\r\n            fontSize: \"16px\",\r\n            padding: \"0.5px\",\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <ResponseAlert\r\n                aceptar={aceptarResponseAlert}\r\n                response={display.response}\r\n                txtOk={content.successAlertOkTxt}\r\n                txtFail={content.successAlertFailTxt}\r\n                btnTxt={content.successAlertBtn}\r\n                display={display.responseAlert}\r\n            />\r\n            <TimeAlert\r\n                display={display.timeAlert}\r\n                txt={content}\r\n                aceptar={aceptarTimeAlert}\r\n                cancelar={cancelar}\r\n                loadingBtn={display.loadingBtn}\r\n            />\r\n            <div className=\"filters\">\r\n                <div className=\"labelInput\">\r\n                    <span className=\"label\">{content.day}:</span>\r\n                    <SingleDatePicker\r\n                        date={filters.day}\r\n                        onDateChange={(date) =>\r\n                            setFilters((prev) => ({\r\n                                ...prev,\r\n                                day: date,\r\n                                dayFormatted: date.format(\"L\"),\r\n                                dayEuropean: `${date.date()}/${date.month() + 1}/${date.year()}`,\r\n                                isSunday: date.format(\"dddd\") === \"Sunday\" ? true : false,\r\n                                dayPicker: true,\r\n                            }))\r\n                        }\r\n                        focused={datePicker.focus} // PropTypes.bool\r\n                        onFocusChange={({ focused }) => {\r\n                            setDayPicker(() => ({ focus: focused }));\r\n                        }}\r\n                        numberOfMonths={1}\r\n                        displayFormat={\"DD/MM/YYYY\"}\r\n                        readOnly={true}\r\n                        firstDayOfWeek={1}\r\n                        isOutsideRange={(day) =>\r\n                            day.isBefore(moment().hours(0)) || day.isAfter(moment().add(7, \"days\"))\r\n                        }\r\n                        id=\"dayComp\"\r\n                    />\r\n                </div>\r\n                <div className=\"labelInput second\">\r\n                    <span className=\"label\">{content.room}:</span>\r\n                    <Select\r\n                        styles={colourStyles}\r\n                        options={selectable}\r\n                        defaultValue={selectable[2]}\r\n                        placeholder={content.all}\r\n                        onChange={(val) =>\r\n                            setFilters((prev) => ({\r\n                                ...prev,\r\n                                room: val.label,\r\n                                roomId: val.value,\r\n                                select: true,\r\n                            }))\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"rooms\">\r\n                {display.loading ? (\r\n                    <ClipLoader color={\"#0093fc\"} size={50} />\r\n                ) : filters.isSunday ? (\r\n                    <span className=\"isSunday\">{content.close}</span>\r\n                ) : (\r\n                    rooms.map((m) => {\r\n                        return (\r\n                            <Room\r\n                                key={m._objCount}\r\n                                name={m.attributes.name}\r\n                                time={m.attributes.times}\r\n                                roomId={m.id}\r\n                                setDisplay={setDisplay}\r\n                                dayFormatted={filters.dayFormatted}\r\n                                noTimes={content.complete}\r\n                            />\r\n                        );\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { createContext } from \"react\";\r\n\r\nexport const DeleteContext = createContext(\"d\");\r\n","import React, { useContext } from \"react\";\r\nimport { DeleteContext } from \"../../context/deleteBooking\";\r\nimport \"./deleteButton.scss\";\r\n\r\nconst DeleteButton = ({ btnTxt, setDisplay, id, room, day, euroDate, time, timeId }) => {\r\n    const { setDeleteData } = useContext(DeleteContext);\r\n\r\n    const onBtnClick = () => {\r\n        setDeleteData(() => ({\r\n            id,\r\n            room,\r\n            day,\r\n            euroDate,\r\n            time,\r\n            timeId,\r\n            deleted: false,\r\n        }));\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            deleteAlert: true,\r\n        }));\r\n    };\r\n    return (\r\n        <button className=\"deleteButton\" onClick={() => onBtnClick()}>\r\n            {btnTxt}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport DeleteButton from \"../deleteButton/deleteButton\";\r\nimport \"./row.scss\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { DeleteContext } from \"../../context/deleteBooking\";\r\n\r\nconst Row = ({ id, roomName, day, euroDate, time, timeId, btnTxt, setDisplay }) => {\r\n    const { lang } = useContext(LangContext);\r\n    const { deleteData } = useContext(DeleteContext);\r\n    const [deleted, setDeleted] = useState({\r\n        id,\r\n        deleted: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (deleteData.id === deleted.id) {\r\n            setDeleted((prev) => ({ ...prev, deleted: deleteData.deleted }));\r\n        }\r\n    }, [deleteData.deleted]);\r\n\r\n    return (\r\n        <tr className={deleted.deleted ? \"noRow\" : \"row\"} rowid={id}>\r\n            <td>{roomName}</td>\r\n            {lang === \"ca\" || lang === \"es\" ? <td>{euroDate}</td> : <td>{day}</td>}\r\n            <td>{time}</td>\r\n            <td>\r\n                <DeleteButton\r\n                    id={id}\r\n                    btnTxt={btnTxt}\r\n                    room={roomName}\r\n                    day={day}\r\n                    euroDate={euroDate}\r\n                    time={time}\r\n                    timeId={timeId}\r\n                    setDisplay={setDisplay}\r\n                />\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Row from \"../row/row\";\r\nimport \"./table.scss\";\r\n\r\nconst Table = ({ header, data, btnTxt, setDisplay }) => {\r\n    return (\r\n        <div className=\"containerTable\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr className=\"trHeader\">\r\n                        {header.map((h) => (\r\n                            <th key={h.unique}>{h.header}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((el) => (\r\n                        <Row\r\n                            key={el.id}\r\n                            id={el.id}\r\n                            roomName={el.roomName}\r\n                            day={el.day}\r\n                            euroDate={el.euroDate}\r\n                            timeId={el.timeId}\r\n                            time={el.time}\r\n                            btnTxt={btnTxt}\r\n                            setDisplay={setDisplay}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useContext } from \"react\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport { DeleteContext } from \"../../context/deleteBooking\";\r\nimport SubmitButtonAlert from \"../submitButton/submitButtonAlert\";\r\nimport \"./deleteAlert.scss\";\r\n\r\nconst DeleteAlert = ({ accept, display, cancel, txt, loadingBtn }) => {\r\n    const { deleteData } = useContext(DeleteContext);\r\n    const { lang } = useContext(LangContext);\r\n\r\n    return (\r\n        <div className={display ? \"deleteAlert\" : \"noDeleteAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <div className=\"txtWrap\">\r\n                        <div className=\"inline\">\r\n                            <MdInfo className=\"icon\" />\r\n                            <span className=\"txt\">\r\n                                {`${txt.deleteSure} ${deleteData.room} ${txt.deleteThe} `}\r\n                                {lang === \"ca\" || lang === \"es\"\r\n                                    ? deleteData.euroDate\r\n                                    : deleteData.day}\r\n                                {` ${txt.deleteAt} ${deleteData.time}?`}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <SubmitButtonAlert txt={txt.accept} loading={loadingBtn} aceptar={accept} />\r\n                        <button className=\"btnCancel\" onClick={() => cancel()}>\r\n                            {txt.cancel}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteAlert;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport Table from \"../../components/table/table\";\r\nimport DeleteAlert from \"../../components/alert/deleteAlert\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport myspaceCa from \"../../json/myspaceCa.json\";\r\nimport myspaceEs from \"../../json/myspaceEs.json\";\r\nimport myspaceEn from \"../../json/myspaceEn.json\";\r\nimport { getUserBookings, getRoomById, deleteBooking } from \"../../api/api\";\r\nimport { DeleteContext } from \"../../context/deleteBooking\";\r\nimport { BookingContext } from \"../../context/booking\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport \"./myspace.scss\";\r\n\r\nconst Myspace = () => {\r\n    const { lang } = useContext(LangContext);\r\n    const { deleteData, setDeleteData } = useContext(DeleteContext);\r\n    const { setBooking } = useContext(BookingContext);\r\n    const { user } = useContext(UserContext);\r\n    const [content, setContent] = useState(\"es\");\r\n    const [display, setDisplay] = useState({\r\n        deleteAlert: false,\r\n        loading: false,\r\n        loadingBtn: false,\r\n    });\r\n    const [tableCol, setTableCol] = useState([\r\n        {\r\n            header: \"Sala\",\r\n            id: \"roomName\",\r\n        },\r\n    ]);\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") {\r\n            setContent(() => myspaceCa);\r\n        } else if (lang === \"es\") {\r\n            setContent(() => myspaceEs);\r\n        } else if (lang === \"en\") {\r\n            setContent(() => myspaceEn);\r\n        }\r\n        getColumns();\r\n    }, [lang]);\r\n\r\n    const dbUserBoo = async () => {\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            loading: true,\r\n        }));\r\n        const res = await getUserBookings();\r\n        let ob = {};\r\n        for (let i = 0; i < res.length; i++) {\r\n            const roomName = await getRoomById(res[i].attributes.room.id);\r\n            ob = {\r\n                day: res[i].attributes.day,\r\n                time: res[i].attributes.time,\r\n                roomName: roomName.attributes.name,\r\n                timeId: res[i].attributes.timeId,\r\n                euroDate: res[i].attributes.euroDate,\r\n                id: res[i].id,\r\n            };\r\n            if (i === 0) setTableData(() => [ob]);\r\n            else setTableData((prev) => [...prev, ob]);\r\n        }\r\n        setDisplay((prev) => ({\r\n            ...prev,\r\n            loading: false,\r\n        }));\r\n    };\r\n\r\n    const getColumns = () => {\r\n        switch (lang) {\r\n            case \"ca\":\r\n                setTableCol(() => [\r\n                    {\r\n                        header: \"Sala\",\r\n                        id: \"roomName\",\r\n                        unique: \"h1ca\",\r\n                    },\r\n                    {\r\n                        header: \"Dia\",\r\n                        id: \"day\",\r\n                        unique: \"h2ca\",\r\n                    },\r\n                    {\r\n                        header: \"Hora\",\r\n                        id: \"time\",\r\n                        unique: \"h3ca\",\r\n                    },\r\n                    {\r\n                        header: \"\",\r\n                        id: \"delete\",\r\n                        unique: \"h4ca\",\r\n                    },\r\n                ]);\r\n                break;\r\n            case \"es\":\r\n                setTableCol(() => [\r\n                    {\r\n                        header: \"Sala\",\r\n                        id: \"roomName\",\r\n                        unique: \"h1es\",\r\n                    },\r\n                    {\r\n                        header: \"Día\",\r\n                        id: \"day\",\r\n                        unique: \"h2es\",\r\n                    },\r\n                    {\r\n                        header: \"Hora\",\r\n                        id: \"time\",\r\n                        unique: \"h3es\",\r\n                    },\r\n                    {\r\n                        header: \"\",\r\n                        id: \"delete\",\r\n                        unique: \"h4es\",\r\n                    },\r\n                ]);\r\n                break;\r\n            case \"en\":\r\n                setTableCol(() => [\r\n                    {\r\n                        header: \"Room\",\r\n                        id: \"room\",\r\n                        unique: \"h1en\",\r\n                    },\r\n                    {\r\n                        header: \"Day\",\r\n                        id: \"day\",\r\n                        unique: \"h2en\",\r\n                    },\r\n                    {\r\n                        header: \"Time\",\r\n                        id: \"time\",\r\n                        unique: \"h3en\",\r\n                    },\r\n                    {\r\n                        header: \"\",\r\n                        id: \"delete\",\r\n                        unique: \"h4en\",\r\n                    },\r\n                ]);\r\n                break;\r\n            default:\r\n                setTableCol(() => [\"deafult\"]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dbUserBoo();\r\n        getColumns();\r\n    }, []);\r\n\r\n    const acceptDeleteAlert = async () => {\r\n        setDisplay((dis) => ({ ...dis, loadingBtn: true }));\r\n        await deleteBooking(deleteData.id);\r\n        setDeleteData((prev) => ({\r\n            ...prev,\r\n            deleted: true,\r\n        }));\r\n        setBooking(() => ({\r\n            dayFormatted: deleteData.day,\r\n            room: deleteData.room,\r\n            roomId: \"\",\r\n            time: deleteData.time,\r\n            timeId: deleteData.timeId,\r\n            booked: false,\r\n        }));\r\n        setDisplay((dis) => ({ ...dis, deleteAlert: false, loadingBtn: false }));\r\n    };\r\n\r\n    const cancel = () => {\r\n        setDisplay((dis) => ({ ...dis, deleteAlert: false }));\r\n    };\r\n\r\n    return (\r\n        <div className={display.loading ? \"mySpaceLoading\" : \"mySpace\"}>\r\n            <DeleteAlert\r\n                display={display.deleteAlert}\r\n                accept={acceptDeleteAlert}\r\n                cancel={cancel}\r\n                txt={content}\r\n                loadingBtn={display.loadingBtn}\r\n            />\r\n            {display.loading ? (\r\n                <ClipLoader color={\"#00d6fc\"} size={50} />\r\n            ) : tableData.length > 0 ? (\r\n                <Table\r\n                    key={\"table\"}\r\n                    btnTxt={content.btnTxt}\r\n                    header={tableCol}\r\n                    data={tableData}\r\n                    setDisplay={setDisplay}\r\n                />\r\n            ) : (\r\n                <div className=\"empty\">\r\n                    <span>{content.empty}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Myspace;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport profileEs from \"../../json/profileEs.json\";\r\nimport profileCa from \"../../json/profileCa.json\";\r\nimport profileEn from \"../../json/profileEn.json\";\r\nimport { logout } from \"../../api/api\";\r\nimport \"./profile.scss\";\r\n\r\nconst Profile = () => {\r\n    const { user, setUser } = useContext(UserContext);\r\n    const { lang } = useContext(LangContext);\r\n    const [content, setContent] = useState(\"p\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") {\r\n            setContent(() => profileCa);\r\n        } else if (lang === \"es\") {\r\n            setContent(() => profileEs);\r\n        } else if (lang === \"en\") {\r\n            setContent(() => profileEn);\r\n        }\r\n    }, [lang]);\r\n\r\n    const onLogout = async () => {\r\n        await logout();\r\n        setUser((prev) => ({ ...prev, logged: false }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"profileCont\">\r\n            <div className=\"userMail\">\r\n                <span className=\"mail\">Mail: </span>\r\n                <span>{user.mail}</span>\r\n            </div>\r\n            <button className=\"logout\" onClick={() => onLogout()}>\r\n                {content.logout}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/user\";\r\n\r\nconst AppRoute = ({ component: Component, layout: Layout, render, ...rest }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!user.logged) return <Redirect to=\"/login\" />;\r\n                return Component ? (\r\n                    <Layout key=\"l\">\r\n                        <Component {...props} />\r\n                    </Layout>\r\n                ) : (\r\n                    render(props)\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default AppRoute;\r\n","import React, { useState } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Parse from \"parse\";\r\nimport Login from \"./pages/login/login\";\r\nimport Register from \"./pages/register/register\";\r\nimport Layout from \"./layouts/main/main\";\r\nimport Dashboard from \"./pages/dashboard/dashboard\";\r\nimport Myspace from \"./pages/myspace/myspace\";\r\nimport Profile from \"./pages/profile/profile\";\r\nimport AppRoute from \"./components/appRoute/appRoute\";\r\nimport moment from \"moment\";\r\nimport { UserContext } from \"./context/user\";\r\nimport { LangContext } from \"./context/lang\";\r\nimport { MenuContext } from \"./context/menu\";\r\nimport { FiltersContext } from \"./context/filters\";\r\nimport { BookingContext } from \"./context/booking\";\r\nimport { DeleteContext } from \"./context/deleteBooking\";\r\n\r\nfunction App() {\r\n    const [lang, setLang] = useState(\"es\");\r\n    const [menu, setMenu] = useState(\"Reservar\");\r\n    const [filters, setFilters] = useState({\r\n        room: \"roomName\",\r\n        roomId: \"all\",\r\n        day: moment(),\r\n        dayFormatted: moment().format(\"L\"),\r\n        dayEuropean: `${moment().date()}/${moment().month() + 1}/${moment().year()}`,\r\n        isSunday: moment().format(\"dddd\") === \"Sunday\" ? true : false,\r\n        select: false,\r\n        dayPicker: false,\r\n    });\r\n\r\n    const [booking, setBooking] = useState({\r\n        room: \"roomName\",\r\n        roomId: \"all\",\r\n        dayFormatted: moment().format(\"L\"),\r\n        time: \"0h-2h\",\r\n        timeId: \"t0\",\r\n        booked: false,\r\n    });\r\n    const appId = \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\";\r\n\r\n    const getUserLoged = () => {\r\n        const session = JSON.parse(localStorage.getItem(`Parse/${appId}/currentUser`));\r\n        if (session) {\r\n            return session.sessionToken\r\n                ? {\r\n                      logged: true,\r\n                      name: session.name,\r\n                      mail: session.email,\r\n                      token: session.sessionToken,\r\n                      id: session.objectId,\r\n                  }\r\n                : { logged: false };\r\n        } else return { logged: false };\r\n    };\r\n\r\n    const [user, setUser] = useState(getUserLoged());\r\n\r\n    const [deleteData, setDeleteData] = useState({\r\n        room: \"roomName\",\r\n        day: moment().format(\"L\"),\r\n        time: \"10-12\",\r\n        timeId: \"t0s0\",\r\n        deleted: false,\r\n        euroDate: \"14/4/2000\",\r\n    });\r\n\r\n    Parse.serverURL = \"https://parseapi.back4app.com\"; // This is your Server URL\r\n    Parse.initialize(\r\n        appId,\r\n        \"YxSrKWAZV2eZw5riHbZWbKr75aBjr2NyuKrll60W\" // This is your Javascript key\r\n    );\r\n\r\n    return (\r\n        <LangContext.Provider value={{ lang, setLang }}>\r\n            <UserContext.Provider value={{ user, setUser }}>\r\n                <MenuContext.Provider value={{ menu, setMenu }}>\r\n                    <FiltersContext.Provider value={{ filters, setFilters }}>\r\n                        <BookingContext.Provider value={{ booking, setBooking }}>\r\n                            <DeleteContext.Provider value={{ deleteData, setDeleteData }}>\r\n                                <Switch>\r\n                                    <Route path=\"/login\" component={Login} />\r\n                                    <Route path=\"/signup\" component={Register} />\r\n                                    <AppRoute\r\n                                        path=\"/\"\r\n                                        exact\r\n                                        component={Dashboard}\r\n                                        layout={Layout}\r\n                                    />\r\n                                    <AppRoute path=\"/myspace\" component={Myspace} layout={Layout} />\r\n                                    <AppRoute path=\"/profile\" component={Profile} layout={Layout} />\r\n                                    <Redirect to=\"/\" />\r\n                                </Switch>\r\n                            </DeleteContext.Provider>\r\n                        </BookingContext.Provider>\r\n                    </FiltersContext.Provider>\r\n                </MenuContext.Provider>\r\n            </UserContext.Provider>\r\n        </LangContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}