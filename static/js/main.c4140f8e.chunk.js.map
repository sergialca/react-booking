{"version":3,"sources":["components/submitButton/submitButton.js","components/input/input.js","components/loginForm/loginForm.js","components/transparentNav/transparentNav.js","context/lang.js","components/langDropdown/langDropdown.js","pages/login/login.js","components/registerForm/registerForm.js","components/alert/alert.js","pages/register/register.js","context/user.js","App.js","serviceWorker.js","index.js"],"names":["SubmitButton","txt","loading","type","className","color","size","Input","children","account","accountChange","placeholder","name","value","onChange","LoginForm","content","useState","mail","psw","setAccount","mailError","setMailError","pswError","setPswError","setLoading","e","target","loginTitle","onSubmit","preventDefault","test","mailRequired","pswRule","pswRequired","Parse","User","logIn","then","user","console","log","JSON","stringify","catch","error","document","write","finally","pswPlaceholder","submitBtn","recoveryTxt","href","recoveryA","TransparentNav","LangContext","createContext","LangDropdown","useContext","lang","setLang","show","setShow","selectLang","la","changeShow","onClick","Login","setContent","useEffect","loginCa","loginEs","to","signup","RegisterForm","showAlert","rePsw","setError","Alert","aceptar","txtBtn","display","Register","setDisplay","changeDisplay","UserContext","UserProvider","props","logged","email","token","id","setUser","Provider","App","serverURL","initialize","path","component","from","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c4140f8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"./submitButton.scss\";\r\nconst SubmitButton = ({ txt, loading }) => {\r\n    return (\r\n        <button type=\"submit\" className=\"submitBtn\">\r\n            {txt}\r\n            <span className=\"spin\">\r\n                <ClipLoader loading={loading} color={\"#fff\"} size={12} />\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\nimport \"./input.scss\";\r\n\r\nconst Input = ({ children, account, accountChange, placeholder, type, name }) => {\r\n    return (\r\n        <div className=\"inputWrapper center space\">\r\n            {children}\r\n            <input\r\n                className=\"input\"\r\n                name={name}\r\n                type={type}\r\n                value={account}\r\n                onChange={accountChange}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { MdMail } from \"react-icons/md\";\r\nimport { BsLockFill } from \"react-icons/bs\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport Input from \"../input/input\";\r\nimport Parse from \"parse\";\r\nimport \"./loginForm.scss\";\r\n\r\nconst LoginForm = ({ content }) => {\r\n    const [account, setAccount] = useState({ mail: \"\", psw: \"\" });\r\n    const [mailError, setMailError] = useState(\"\");\r\n    const [pswError, setPswError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const accountChange = (e) => {\r\n        setMailError(\"\");\r\n        setPswError(\"\");\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const validMail = () => {\r\n        if (\r\n            account.mail &&\r\n            !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                account.mail\r\n            )\r\n        ) {\r\n            setMailError(content.mailError);\r\n            return false;\r\n        } else if (!account.mail) {\r\n            setMailError(content.mailRequired);\r\n            return false;\r\n        } else {\r\n            setMailError(\"\");\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validPsw = () => {\r\n        if (account.psw && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(account.psw)) {\r\n            setPswError(content.pswRule);\r\n            return false;\r\n        } else if (!account.psw) {\r\n            setPswError(content.pswRequired);\r\n            return false;\r\n        } else {\r\n            setPswError(\"\");\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const logIn = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const mail = validMail();\r\n        const psw = validPsw();\r\n        if (mail && psw) {\r\n            Parse.User.logIn(account.mail, account.psw)\r\n                .then((user) => {\r\n                    console.log(\"User LOGEDIN\", JSON.stringify(user));\r\n                })\r\n                .catch((error) => {\r\n                    if (typeof document !== \"undefined\")\r\n                        document.write(`Error while logging in user: ${JSON.stringify(error)}`);\r\n                    console.error(\"Error while logging in user\", error);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        } else setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <p className=\"loginTxt\">{content.loginTitle}</p>\r\n            <form className=\"loginForm\" onSubmit={logIn}>\r\n                <Input\r\n                    name=\"mail\"\r\n                    account={account.mail}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Mail\"\r\n                    type=\"mail\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <MdMail />\r\n                    </span>\r\n                </Input>\r\n                <div className=\"loginError\">{mailError}</div>\r\n                <Input\r\n                    name=\"psw\"\r\n                    account={account.psw}\r\n                    accountChange={accountChange}\r\n                    placeholder={content.pswPlaceholder}\r\n                    type=\"password\"\r\n                >\r\n                    <span>\r\n                        <BsLockFill />\r\n                    </span>\r\n                </Input>\r\n                <div className=\"loginError\">{pswError}</div>\r\n                <div className=\"loginBtnWrapper space\">\r\n                    <SubmitButton loading={loading} txt={content.submitBtn} />\r\n                </div>\r\n                <div className=\"space recover\">\r\n                    <span>\r\n                        {content.recoveryTxt}{\" \"}\r\n                        <a href=\"mailto:support@gmail.com\">{content.recoveryA}</a>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./transparentNav.scss\";\r\n\r\nconst TransparentNav = ({ children }) => {\r\n    return <div className=\"transparentNav\">{children}</div>;\r\n};\r\n\r\nexport default TransparentNav;\r\n","import { createContext } from \"react\";\r\n\r\nexport const LangContext = createContext(\"\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport \"./langDropdown.scss\";\r\n\r\nconst LangDropdown = () => {\r\n    const { lang, setLang } = useContext(LangContext);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const selectLang = (la) => {\r\n        if (la === \"ca\") {\r\n            setLang(\"ca\");\r\n        } else if (la === \"es\") {\r\n            setLang(\"es\");\r\n        }\r\n        setShow((show) => !show);\r\n    };\r\n\r\n    const changeShow = () => {\r\n        setShow((show) => !show);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div onClick={changeShow} className=\"dropbtn\">\r\n                {lang === \"es\" ? \"ESP\" : lang === \"ca\" ? \"CAT\" : \"ENG\"}\r\n            </div>\r\n            <div onClick={changeShow} className=\"arrow\"></div>\r\n            <div className={show ? \"dropdown-content\" : \"noDropdown\"}>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"es\")}>\r\n                    ESP\r\n                </div>\r\n                <div className=\"langDrop\" onClick={() => selectLang(\"ca\")}>\r\n                    CAT\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LangDropdown;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginForm from \"../../components/loginForm/loginForm\";\r\nimport TransparentNav from \"../../components/transparentNav/transparentNav\";\r\nimport LangDropdown from \"../../components/langDropdown/langDropdown\";\r\nimport { LangContext } from \"../../context/lang\";\r\nimport loginEs from \"../../json/loginEs.json\";\r\nimport loginCa from \"../../json/loginCa.json\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = () => {\r\n    const { lang } = useContext(LangContext);\r\n    const [content, setContent] = useState(\"hola\");\r\n\r\n    useEffect(() => {\r\n        if (lang === \"ca\") setContent(() => loginCa);\r\n        else if (lang === \"es\") setContent(() => loginEs);\r\n    }, [lang]);\r\n\r\n    return (\r\n        <div>\r\n            <TransparentNav>\r\n                <LangDropdown />\r\n            </TransparentNav>\r\n            <div className=\"login\">\r\n                <div className=\"formContainer fade\">\r\n                    <LoginForm content={content} />\r\n                    <div className=\"linkWrap\">\r\n                        <Link to={`/signup`}>{content.signup}</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { MdMail, MdInfo } from \"react-icons/md\";\r\nimport { BsLockFill, BsPersonFill } from \"react-icons/bs\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport Input from \"../input/input\";\r\nimport Parse from \"parse\";\r\nimport \"./registerForm.scss\";\r\n\r\nconst RegisterForm = ({ showAlert }) => {\r\n    const [account, setAccount] = useState({ mail: \"\", psw: \"\", name: \"\", rePsw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\", rePsw: \"\", name: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const accountChange = (e) => {\r\n        setAccount({\r\n            ...account,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const validMail = () => {\r\n        if (\r\n            account.mail &&\r\n            !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                account.mail\r\n            )\r\n        ) {\r\n            setError((error) => ({ ...error, mail: \"Mail no válido\" }));\r\n            return false;\r\n        } else if (!account.user) {\r\n            setError((error) => ({ ...error, mail: \"Mail requerido\" }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, mail: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validPsw = () => {\r\n        if (account.psw && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/.test(account.psw)) {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: \"La contraseña debe contener mínimo 8 carácteres\",\r\n            }));\r\n            return false;\r\n        } else if (!account.psw) {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: \"Contraseña requerida\",\r\n            }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({\r\n                ...error,\r\n                psw: \"\",\r\n            }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validRePsw = () => {\r\n        if (account.psw !== account.rePsw) {\r\n            setError((error) => ({ ...error, rePsw: \"Las contraseñas no coinciden\" }));\r\n            return false;\r\n        } else if (!account.rePsw) {\r\n            setError((error) => ({ ...error, rePsw: \"Campo requerido\" }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, rePsw: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const validName = () => {\r\n        if (!account.name) {\r\n            setError((error) => ({ ...error, name: \"Nombre requerido\" }));\r\n            return false;\r\n        } else {\r\n            setError((error) => ({ ...error, name: \"\" }));\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const mail = validMail();\r\n        const name = validName();\r\n        const psw = validPsw();\r\n        const rePsw = validRePsw();\r\n        if (mail && psw && rePsw && name) {\r\n            console.log(\"buen registro\");\r\n        } else setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"formWrapper\">\r\n            <p className=\"signinTxt\">Sign up</p>\r\n            <form className=\"signinForm\" onSubmit={signIn}>\r\n                <Input\r\n                    name=\"name\"\r\n                    account={account.name}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Nombre completo\"\r\n                    type=\"\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <BsPersonFill />\r\n                    </span>\r\n                </Input>\r\n                <div className=\"signinError\">{error.name}</div>\r\n                <Input\r\n                    name=\"mail\"\r\n                    account={account.mail}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Mail\"\r\n                    type=\"mail\"\r\n                >\r\n                    <span className=\"svg\">\r\n                        <MdMail />\r\n                    </span>\r\n                </Input>\r\n                <div className=\"signinError\">{error.mail}</div>\r\n                <div className=\"inputInfoContainer space\">\r\n                    <div className=\"inputInfoWrapper\">\r\n                        <span>\r\n                            <BsLockFill />\r\n                        </span>\r\n                        <input\r\n                            className=\"inputInfo\"\r\n                            name=\"psw\"\r\n                            type=\"password\"\r\n                            value={account.psw}\r\n                            onChange={accountChange}\r\n                            placeholder=\"Contraseña\"\r\n                        />\r\n                    </div>\r\n                    <MdInfo onClick={() => showAlert()} className=\"info\" />\r\n                </div>\r\n                <div className=\"signinError\">{error.psw}</div>\r\n                <Input\r\n                    name=\"rePsw\"\r\n                    account={account.rePsw}\r\n                    accountChange={accountChange}\r\n                    placeholder=\"Repetir contraseña\"\r\n                    type=\"password\"\r\n                >\r\n                    <span>\r\n                        <BsLockFill />\r\n                    </span>\r\n                </Input>\r\n                <div className=\"signinError\">{error.rePsw}</div>\r\n                <div className=\"signinBtnWrapper\">\r\n                    <SubmitButton loading={loading} txt=\"Sign up\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport \"./alert.scss\";\r\nconst Alert = ({ txt, aceptar, txtBtn, display }) => {\r\n    return (\r\n        <div className={display ? \"alert\" : \"noAlert\"}>\r\n            <div className=\"alertBack\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"info\">\r\n                    <div className=\"txtWrap\">\r\n                        <span className=\"txt\">{txt}</span>\r\n                    </div>\r\n                    <div className=\"btnWrap\">\r\n                        <button className=\"btn\" onClick={() => aceptar()}>\r\n                            {txtBtn}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\r\nimport RegisterForm from \"../../components/registerForm/registerForm\";\r\nimport Alert from \"../../components/alert/alert\";\r\nimport TransparentNav from \"../../components/transparentNav/transparentNav\";\r\nimport LangDropdown from \"../../components/langDropdown/langDropdown\";\r\nimport \"./register.scss\";\r\n\r\nconst Register = () => {\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    const changeDisplay = () => {\r\n        setDisplay(!display);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TransparentNav>\r\n                <LangDropdown />\r\n            </TransparentNav>\r\n            <div className=\"register\">\r\n                <div className=\"formContainer fade\">\r\n                    <RegisterForm showAlert={changeDisplay} />\r\n                </div>\r\n                <Alert\r\n                    txt={\r\n                        \"La contraseña debe contener 8 carácteres mínimo, una mayúscula, una minúscula y un número.\"\r\n                    }\r\n                    txtBtn={\"Aceptar\"}\r\n                    display={display}\r\n                    aceptar={changeDisplay}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\nexport const UserProvider = (props) => {\r\n    const [user, setUser] = useState({\r\n        logged: true,\r\n        name: \"\",\r\n        email: \"\",\r\n        token: \"\",\r\n        id: \"\",\r\n    });\r\n    return <UserContext.Provider value={[user, setUser]}>{props.children}</UserContext.Provider>;\r\n};\r\n","import React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Parse from \"parse\";\nimport Login from \"./pages/login/login\";\nimport Register from \"./pages/register/register\";\nimport { UserProvider } from \"./context/user\";\nimport { LangContext } from \"./context/lang\";\n\nfunction App() {\n    const [lang, setLang] = useState(\"es\");\n\n    Parse.serverURL = \"https://parseapi.back4app.com\"; // This is your Server URL\n    Parse.initialize(\n        \"kn0fKAr5wiPrx2FEjeIlejuE9s8AjEHaF2vY9zj9\", // This is your Application ID\n        \"YxSrKWAZV2eZw5riHbZWbKr75aBjr2NyuKrll60W\" // This is your Javascript key\n    );\n    return (\n        <LangContext.Provider value={{ lang, setLang }}>\n            <UserProvider>\n                <Switch>\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Register} />\n                    <Redirect from=\"/\" to={\"/login\"} />\n                </Switch>\n            </UserProvider>\n        </LangContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}